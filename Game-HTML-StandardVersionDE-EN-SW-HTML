<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title data-translate="title">Schreibabenteuer DemusOpalium</title>
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Lora:wght@700&family=Roboto:wght@400;700&family=Merriweather:wght@400;700&family=Courier+Prime&display=swap" rel="stylesheet">
  <!-- Animate.css für Animationen -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
  <style>
    /* Basis-Reset */
    * { box-sizing: border-box; margin: 0; padding: 0; }
    /* Grundlayout und Themes */
    body {
      font-family: 'Roboto', sans-serif;
      transition: background 0.5s ease, color 0.5s ease;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }
    /* Vorhandene Themes */
    .theme-dark { background: linear-gradient(135deg, #2c3e50, #4ca1af); color: #f0f0f0; }
    .theme-light { background: #f7f7f7; color: #333; }
    .theme-vintage { background: #f4e8c1; color: #5a4b3b; }
    /* Neue Themes */
    .theme-neon { background: #0f0f0f; color: #39ff14; }
    .theme-pastel { background: #ffe6f0; color: #ff8fa3; }
    .theme-ocean { background: #1e3d59; color: #a2d5f2; }
    .theme-forest { background: #2d4739; color: #cdeac0; }
    .theme-sunset { background: #ff9a8d; color: #4b134f; }
    /* Rahmen für Buttons, Selects und Labels */
    .theme-dark button, .theme-dark select, .theme-dark label { border: 1px solid #444; }
    .theme-light button, .theme-light select, .theme-light label { border: 1px solid #ccc; }
    .theme-vintage button, .theme-vintage select, .theme-vintage label { border: 1px solid #a67c52; }
    .theme-neon button, .theme-neon select, .theme-neon label { border: 1px solid #39ff14; }
    .theme-pastel button, .theme-pastel select, .theme-pastel label { border: 1px solid #ff8fa3; }
    .theme-ocean button, .theme-ocean select, .theme-ocean label { border: 1px solid #a2d5f2; }
    .theme-forest button, .theme-forest select, .theme-forest label { border: 1px solid #cdeac0; }
    .theme-sunset button, .theme-sunset select, .theme-sunset label { border: 1px solid #4b134f; }
    /* Überschrift */
    .title {
      font-family: 'Lora', serif;
      font-size: 2.5em;
      margin-bottom: 20px;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.7);
      text-transform: uppercase;
    }
    /* Profilbereich */
    #profileContainer {
      width: 100%;
      max-width: 800px;
      background: rgba(0,0,0,0.2);
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      gap: 15px;
    }
    #profileImage {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      background: #ccc;
      object-fit: cover;
      border: 2px solid #fff;
    }
    #profileDetails { flex: 1; color: inherit; }
    #profileDetails h3, #profileDetails p { margin: 3px 0; }
    /* Rang-Badge im Profilbereich */
    .rank-badge {
      background: gold;
      color: #000;
      padding: 3px 6px;
      border-radius: 4px;
      font-weight: bold;
      margin-left: 8px;
      font-size: 0.8em;
    }
    /* Shopbereich */
    #shopContainer {
      width: 100%;
      max-width: 800px;
      background: rgba(0,0,0,0.2);
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
      text-align: center;
    }
    #shopContainer h2 { margin-bottom: 10px; }
    #shopContainer button {
      margin: 5px;
      padding: 5px 10px;
      font-size: 0.9em;
      border-radius: 5px;
      background: rgba(255,255,255,0.2);
      color: inherit;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    #shopContainer button:hover { background: rgba(255,255,255,0.4); }
    /* Refresh-Buttons im Shop */
    #shopContainer .refresh-btn {
      margin-top: 10px;
      background: #0077cc;
      color: #fff;
      border: none;
    }
    #shopContainer .refresh-btn:hover { background: #005fa3; }
    /* Inventarbereich */
    #inventoryContainer {
      width: 100%;
      max-width: 800px;
      background: rgba(0,0,0,0.2);
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    #inventoryContainer h2 { text-align: center; margin-bottom: 10px; }
    #inventoryContainer div { margin-bottom: 10px; }
    #inventoryContainer img { margin: 5px; border: 2px solid #fff; border-radius: 4px; cursor: pointer; }
    /* Info Button & Modal */
    #infoBtn {
      position: fixed;
      top: 10px;
      right: 10px;
      background: rgba(255,255,255,0.2);
      border-radius: 50%;
      padding: 10px;
      font-size: 1.5em;
      cursor: pointer;
      transition: background 0.3s ease;
      z-index: 100;
    }
    #infoBtn:hover { background: rgba(255,255,255,0.4); }
    .modal {
      display: none;
      position: fixed;
      z-index: 200;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.7);
      align-items: center;
      justify-content: center;
    }
    .modal-content {
      background: #fff;
      color: #333;
      padding: 20px;
      border-radius: 8px;
      max-width: 600px;
      width: 90%;
      text-align: left;
      font-family: 'Roboto', sans-serif;
    }
    .close-btn {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }
    .close-btn:hover { color: #000; }
/* Dropdowns & Buttons */
.design-controls, .extra-controls {
  margin-bottom: 20px;
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: center;
}
.design-controls select, .extra-controls select, .extra-controls button {
  padding: 10px;
  font-size: 1em;
  border-radius: 5px;
  background: rgba(255,255,255,0.2);
  color: inherit;
  cursor: pointer;
  transition: background 0.3s ease;
}
.design-controls select:hover, .extra-controls select:hover, .extra-controls button:hover {
  background: rgba(255,255,255,0.4);
}
/* Statusleiste */
.status-bar {
  margin-bottom: 15px;
  font-size: 1.1em;
  background: rgba(0,0,0,0.3);
  padding: 10px 15px;
  border-radius: 5px;
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: center;
}
.status-item { min-width: 100px; text-align: center; }
#copyScoreDisplay { display: none; }
/* Neuer Schreibbereich mit Hintergrund – direkt unter den Buttons */
.input-frame {
  display: inline-block;
  width: calc(58ch + 70px);
  height: 850px;
  /* Padding: oben 10px, rechts 35px, unten 250px, links 35px */
  padding: 10px 35px 250px 35px;
  background-image: url('https://i.imgur.com/q7KFSvH.png');
  background-size: calc(58ch + 70px) 850px;
  background-repeat: no-repeat;
  background-position: top left;
  margin-top: 10px;
}

/* Für größere Bildschirme (ab 1200px) – Container doppelt so breit, aber auch hier den oberen Padding reduzieren */
@media (min-width: 1200px) {
  .input-frame {
    width: 1200px;
    height: 850px;
    /* Auch hier: oberer Padding auf 10px statt 300px */
    padding: 10px 300px 250px 300px;
    background-size: 1200px 850px;
  }
}
/* Textfeld: fest auf 58 Zeichen Breite (monospaced) und 300px Höhe – Zeilenumbrüche werden automatisch eingefügt */
#writeArea {
  width: 58ch;
  max-width: 58ch;
  height: 300px;
  background: rgba(255,255,255,0.1);
  color: inherit;
  padding: 15px;
  border: 2px solid;
  border-radius: 8px;
  outline: none;
  overflow-y: auto;
  font-size: 1.1em;
  line-height: 1.5em;
  font-family: 'Courier Prime', monospace;
  margin: 0 auto;
}
.theme-dark #writeArea { border-color: #444; }
.theme-light #writeArea { border-color: #ccc; }
.theme-vintage #writeArea { border-color: #a67c52; }
.theme-neon #writeArea { border-color: #39ff14; }
.theme-pastel #writeArea { border-color: #ff8fa3; }
.theme-ocean #writeArea { border-color: #a2d5f2; }
.theme-forest #writeArea { border-color: #cdeac0; }
.theme-sunset #writeArea { border-color: #4b134f; }
#writeArea.warning { background: rgba(200,50,50,0.5); animation: shake 0.5s infinite alternate; }
@keyframes shake { from { transform: translateX(0); } to { transform: translateX(3px); } }
/* Copy Challenge */
#copyTarget {
  display: none;
  border: 2px solid #000;
  background: #fff;
  color: #000;
  padding: 10px;
  font-size: 1.5em;
  font-weight: bold;
  margin-bottom: 10px;
  border-radius: 5px;
}

/* --- Neuer CSS-Code für den Effekt Text, der in der Mitte des Hintergrunds liegt --- */
#effectDisplay {
  display: none;
}

#effectDisplay {
  position: relative; /* Ermöglicht absolute Positionierung der Kindelemente */
  margin-top: 0;
  padding-top: 0;
  /* Falls nötig, kannst du hier auch die Höhe anpassen */
}

/* Den Canvas kannst du wie gehabt belassen oder anpassen */
#effectCanvas {
  display: block;
  margin: 0;
  padding: 0;
  height: 60px; /* Beispielwert – passe die Höhe nach Bedarf an */
}

/* Den Effekt Text weiter nach unten ziehen und zentrieren */
#cssEffectText {
  position: absolute;
  bottom: 10px;         /* 10px Abstand vom unteren Rand des Containers */
  left: 50%;            /* Horizontal in der Mitte */
  transform: translateX(-50%);  /* Korrektur, damit der Text wirklich zentriert ist */
  margin: 0;
  padding: 0;
  font-size: 0.8em;     /* Kleinere Schriftgröße */
  color: inherit;       /* Vererbt die Schriftfarbe des übergeordneten Elements */
  /* Optional: ein halbtransparenter Hintergrund, damit der Text besser lesbar ist */
  background: rgba(0, 0, 0, 0.4);
  border-radius: 4px;
  padding: 2px 5px;
}

    #targetSentence { font-weight: bold; }
    /* Steuerungselemente */
    .controls {
      margin-top: 15px;
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 10px;
    }
    .controls label, .controls select, .controls button {
      padding: 10px 15px;
      font-size: 1em;
      border-radius: 5px;
      background: rgba(255,255,255,0.2);
      color: inherit;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .controls button:hover, .controls select:hover, .controls label:hover {
      background: rgba(255,255,255,0.4);
    }
    /* Boss-Anzeige */
    #bossContainer { display: none; margin-top: 10px; text-align: center; }
    #bossName { font-size: 1.2em; font-weight: bold; margin-bottom: 5px; }
    #bossHealthBar {
      background: red;
      width: 300px;
      height: 20px;
      border-radius: 10px;
      overflow: hidden;
      margin: 0 auto;
    }
    #bossHealth {
      background: green;
      width: 100%;
      height: 100%;
      transition: width 0.5s ease;
    }

    .input-frame {
  position: relative;  /* Wichtig: Damit absolute Positionierung im Inneren funktioniert */
  display: inline-block;
  width: calc(58ch + 70px);
  height: 850px;
  padding: 10px 35px 250px 35px;
  background-image: url('https://i.imgur.com/q7KFSvH.png');
  background-size: calc(58ch + 70px) 850px;
  background-repeat: no-repeat;
  background-position: top left;
  margin-top: 10px;
}

#achievementPopup {
  position: absolute;
  /* Setze den Wert so, dass das Popup direkt über dem Texteingabefeld erscheint.
     Beispiel: Wenn das Texteingabefeld etwa 300px hoch ist und am unteren Ende des Containers liegt,
     könnte ein top-Wert von etwa 240px passen – passe diesen Wert nach Bedarf an. */
  top: 1450px;
  left: 42%;
  transform: translateX(-50%);
  z-index: 1000;
  background: rgba(255, 235, 59, 0.9);  /* Gelber Hintergrund */
  color: #333;
  padding: 10px 20px;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.2);
  display: none;  /* Wird per JavaScript ein-/ausgeblendet */
  font-size: 1em;
  text-align: center;
}

    /* Erfolge & Belohnungen */
    .achievements-rewards-container {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      max-width: 800px;
      width: 100%;
      margin-top: 20px;
    }
    .achievements-section, .rewards-section {
      flex: 1 1 380px;
      background: rgba(0,0,0,0.3);
      padding: 15px;
      border-radius: 8px;
    }
    .achievements-section h2, .rewards-section h2 { text-align: center; margin-bottom: 10px; }
    .achievement-filters {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-bottom: 10px;
      flex-wrap: wrap;
    }
    .achievement-filters label { font-size: 0.9em; }
    .achievement-filters select { padding: 5px; font-size: 0.9em; }
    #achievementTable {
      width: 100%;
      border-collapse: collapse;
    }
    #achievementTable th, #achievementTable td {
      padding: 8px;
      text-align: center;
      border-bottom: 1px solid rgba(255,255,255,0.2);
    }
    #achievementTable th { background: rgba(255,255,255,0.2); }
    /* Leaderboard */
    .leaderboard {
      margin-top: 20px;
      max-width: 800px;
      width: 100%;
      background: rgba(0,0,0,0.3);
      padding: 15px;
      border-radius: 8px;
      overflow-x: auto;
    }
    .leaderboard table {
      width: 100%;
      border-collapse: collapse;
    }
    .leaderboard th, .leaderboard td {
      padding: 10px;
      text-align: center;
      border-bottom: 1px solid rgba(255,255,255,0.2);
    }
    .leaderboard th { background: rgba(255,255,255,0.2); }
    /* End Session Popup */
    #endSessionPopup {
      display: none;
      position: fixed;
      z-index: 300;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      background: #fff;
      color: #333;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 8px 16px rgba(0,0,0,0.3);
      text-align: center;
      max-width: 90%;
    }
    #endSessionPopup button {
      margin-top: 20px;
      padding: 10px 20px;
      font-size: 1em;
      cursor: pointer;
      border-radius: 5px;
      border: none;
      background: #0077cc;
      color: #fff;
      transition: background 0.3s ease;
    }
    #endSessionPopup button:hover { background: #005fa3; }
    /* CSS Animation für Würfel-Popup */
    .dice-animation {
      animation: rollDice 0.5s ease-in-out;
    }
    @keyframes rollDice {
      0% { transform: rotate(0deg); }
      50% { transform: rotate(180deg); }
      100% { transform: rotate(360deg); }
    }
    .fade-out {
      animation: fadeOut 1s forwards;
    }
    @keyframes fadeOut {
      to { opacity: 0; }
    }
    /* Responsive Layout */
    @media (min-width: 1200px) {
      .input-frame {
        width: 1200px;
        background-size: 1200px 850px;
        padding: 300px 300px 250px 300px;
      }
    }
    @media (max-width: 600px) {
      #writeArea { height: 250px; }
      .status-bar, .controls, .design-controls, .extra-controls, .achievements-rewards-container {
        flex-direction: column;
      }
      #profileContainer { flex-direction: column; align-items: center; }
    }
    /* Button für Sprachumschaltung */
    #langBtn {
      position: fixed;
      top: 10px;
      left: 10px;
      padding: 5px 10px;
      font-size: 1em;
      cursor: pointer;
      z-index: 300;
    }
  </style>
</head>
<body class="theme-dark">
  <!-- Sprachumschalt-Button -->
  <button id="langBtn" onclick="toggleLanguage()">EN</button>

  <!-- Profilbereich -->
  <div id="profileContainer">
    <img id="profileImage" src="https://via.placeholder.com/80" alt="Profilbild">
    <div id="profileDetails">
      <h3 id="playerName" data-translate="playerName">Spielername</h3>
      <p id="playerRank" data-translate="playerRank">Rang: <span class="rank-badge">Bronze</span></p>
      <p id="playerWissenspunkte" data-translate="playerPoints">Wissenspunkte: 0</p>
    </div>
  </div>

  <!-- Namensänderung -->
  <div id="nameChangeContainer">
    <input type="text" id="playerNameInput" data-translate-placeholder="newNamePlaceholder" placeholder="Neuen Namen eingeben">
    <button id="changeNameBtn" data-translate="changeNameBtn">Namen ändern</button>
  </div>
  
  <!-- Shopbereich -->
  <div id="shopContainer">
    <h2 data-translate="shopTitle">Shop</h2>
    <div id="shopProfileSection"></div>
    <div id="shopGluecksbringerSection"></div>
    <button class="refresh-btn" onclick="refreshProfile()" data-translate="profileRefresh">Profil Refresh</button>
    <button class="refresh-btn" onclick="refreshGluecksbringer()" data-translate="gluecksbringerRefresh">Glücksbringer Refresh</button>
  </div>
  
  <!-- Inventarbereich -->
  <div id="inventoryContainer">
    <h2 data-translate="inventoryTitle">Inventar</h2>
    <!-- Inventar wird dynamisch gerendert -->
  </div>
  
  <!-- Info Button & Modal -->
  <button id="infoBtn">ℹ️</button>
  <div id="infoModal" class="modal">
    <div class="modal-content">
      <span class="close-btn" id="closeInfo">&times;</span>
      <h2 style="color: #0077cc;" data-translate="infoTitle">Willkommen bei Schreibabenteuer DemusOpalium! ✨</h2>
      <p>
        <strong data-translate="infoOverviewTitle">📜 Überblick:</strong><br>
        <span data-translate="infoOverview">
          Schreibe in variablen Zeitmodi (1–5 Minuten) spannende Challenges – egal ob Freewrite, Adventure, Copy Challenge oder Hardcore. Nur Tippen, kein Kopieren!
        </span>
      </p>
      <p>
        <strong data-translate="infoModesTitle">🚀 Modi:</strong><br>
        <span data-translate="infoModes">
          Freewrite, Adventure (gegen den Wort-Boss), Copy Challenge und Hardcore.
        </span>
      </p>
      <p>
        <strong data-translate="infoNoticeTitle">⚠️ Hinweis:</strong><br>
        <span data-translate="infoNotice">
          Copy-Paste ist verboten! Schummeln gibt‘s nicht!
        </span>
      </p>
      <p>
        <strong data-translate="infoRewardsTitle">🎉 Belohnungen & Erfolge:</strong><br>
        <span data-translate="infoRewards">
          Schalte Erfolge frei und erhalte coole Rewards – dein Fortschritt wird gespeichert!
        </span>
      </p>
    </div>
  </div>
  
  <!-- Überschrift -->
  <div class="title" data-translate="title">Schreibabenteuer DemusOpalium</div>
  
  <!-- Design & Extra Controls -->
  <div class="design-controls">
    <label for="themeSelect" data-translate="chooseTheme">Theme wählen:</label>
    <select id="themeSelect">
      <option value="theme-dark" selected>Dark</option>
      <option value="theme-light">Light</option>
      <option value="theme-vintage">Vintage</option>
      <option value="theme-neon">Neon</option>
      <option value="theme-pastel">Pastel</option>
      <option value="theme-ocean">Ocean</option>
      <option value="theme-forest">Forest</option>
      <option value="theme-sunset">Sunset</option>
    </select>
    <label for="fontSelect" data-translate="chooseFont">Schriftart wählen:</label>
    <select id="fontSelect">
      <option value="'Roboto', sans-serif" selected>Roboto</option>
      <option value="'Lora', serif">Lora</option>
      <option value="'Merriweather', serif">Merriweather</option>
      <option value="'Courier Prime', monospace">Courier Prime</option>
      <option value="'Courier New', monospace">Courier New</option>
    </select>
  </div>
  <div class="extra-controls">
    <label for="difficultySelect" data-translate="difficulty">Schwierigkeitsgrad:</label>
    <select id="difficultySelect">
      <option value="easy" selected>Einfach</option>
      <option value="normal">Normal</option>
      <option value="hard">Schwer</option>
    </select>
    <label for="librarySelect" data-translate="category">Kategorie:</label>
    <select id="librarySelect">
      <option value="standard" selected>Standard</option>
      <option value="realschule">Realschule</option>
      <option value="gymnasium">Gymnasium</option>
      <option value="medizin">Medizin</option>
      <option value="bank">Bank</option>
      <option value="tierwelt">Tierwelt</option>
      <option value="code_python">Code/Python</option>
    </select>
    <button id="shareBtn" data-translate="shareResults">Ergebnisse Teilen</button>
    <button id="saveProfileBtn" data-translate="saveProfile">Profil Speichern</button>
    <button id="loadProfileBtn" data-translate="loadProfile">Profil Laden</button>
    <input type="file" id="loadProfileInput" style="display:none;" accept=".txt, .json">
  </div>
  
  <!-- Statusleiste -->
  <div class="status-bar">
    <div class="status-item" id="timer" data-translate="time">Time: 01:00</div>
    <div class="status-item" id="wordCount" data-translate="words">Words: 0</div>
    <div class="status-item" id="goalProgress" data-translate="goal">Goal: 0/100</div>
    <div class="status-item" id="xpDisplay" data-translate="xp">XP: 0</div>
    <div class="status-item" id="levelDisplay" data-translate="level">Level: 1</div>
    <div class="status-item" id="wpmDisplay" data-translate="wpm">WPM: 0</div>
    <div class="status-item" id="apmDisplay" data-translate="apm">APM: 0</div>
    <div class="status-item" id="hotStreakIndicator" data-translate="hotStreak">HOT STREAK!</div>
    <div class="status-item" id="copyScoreDisplay" style="display:none;" data-translate="copyScore">Copy Score: 0</div>
  </div>
  
  <!-- Steuerungselemente -->
  <div class="controls">
    <label for="modeSelect" data-translate="mode">Modus:</label>
    <select id="modeSelect">
      <option value="free" data-translate="freeMode">Freewrite (keine Strafe)</option>
      <option value="hardcore" data-translate="hardcoreMode">Hardcore (Text löschen)</option>
      <option value="creative" data-translate="creativeMode">Kreativ (mit Schreibimpuls)</option>
      <option value="adventure" data-translate="adventureMode">Adventure (Boss &amp; EPIC)</option>
      <option value="copy" data-translate="copyMode">Copy Challenge</option>
    </select>
    <label for="timeSelect" data-translate="timeMode">Zeitmodus:</label>
    <select id="timeSelect">
      <option value="1">1 Minute</option>
      <option value="2">2 Minuten</option>
      <option value="3">3 Minuten</option>
      <option value="4">4 Minuten</option>
      <option value="5" selected>5 Minuten</option>
    </select>
    <button id="startBtn" data-translate="prepareGame">Spiel vorbereiten</button>
    <button id="resetBtn" data-translate="reset">Reset</button>
    <button id="promptBtn" style="display:none;" data-translate="showPrompt">Schreibimpuls anzeigen</button>
  </div>
  
  <!-- Copy Challenge -->
  <div id="copyTarget" style="display:none;">&gt; <span id="targetSentence"></span></div>
  <button id="checkBtn" style="display:none;" data-translate="checkSentence">Satz prüfen</button>
  
  <!-- Boss-Anzeige -->
  <div id="bossContainer" style="display:none;">
    <div id="bossName"></div>
    <div id="bossHealthBar"><div id="bossHealth"></div></div>
  </div>
  
  <!-- Effekt-Anzeige Container (direkt unter den Buttons) -->
  <div id="effectDisplay" class="effect-overlay">
    <!-- Canvas für dynamische Grafikeffekte -->
    <canvas id="effectCanvas" width="800" height="200"></canvas>
    <!-- Optional: Div für CSS-basierte Texteffekte -->
    <div id="cssEffectText">Effekt Text</div>
  </div>
  
  <!-- Neuer Schreibbereich mit Hintergrundbild – direkt unter den Buttons -->
  <div class="input-frame">
    <div id="writeArea" contenteditable="true" data-translate-placeholder="writePlaceholder" placeholder="Hier beginnen zu schreiben..."></div>
  </div>
  
  <!-- Achievement-Popup -->
  <div class="achievement animate__animated" id="achievementPopup">Achievement unlocked! 🎉</div>
  
  <!-- Erfolge & Belohnungen -->
  <div class="achievements-rewards-container">
    <div class="achievements-section">
      <h2 data-translate="achievementsTitle">Erfolge</h2>
      <div class="achievement-filters">
        <label for="achievementCategoryFilter" data-translate="achievementCategory">Kategorie:</label>
        <select id="achievementCategoryFilter">
          <option value="all" data-translate="all">Alle</option>
          <option value="Freewrite">Freewrite</option>
          <option value="Adventure">Adventure</option>
          <option value="Copy">Copy Challenge</option>
          <option value="Hardcore">Hardcore</option>
          <option value="Allgemein">Allgemeine &amp; Langzeit</option>
          <option value="Kreativ">Kreativ</option>
        </select>
        <label for="achievementDifficultyFilter" data-translate="achievementDifficulty">Schwierigkeitsgrad:</label>
        <select id="achievementDifficultyFilter">
          <option value="all" data-translate="all">Alle</option>
          <option value="easy" data-translate="easy">Leicht</option>
          <option value="normal" data-translate="normal">Normal</option>
          <option value="hard" data-translate="hard">Schwer/Episch</option>
        </select>
      </div>
      <table id="achievementTable">
        <thead>
          <tr>
            <th data-translate="icon">Icon</th>
            <th data-translate="achievement">Erfolg</th>
            <th data-translate="condition">Bedingung</th>
            <th data-translate="status">Status</th>
          </tr>
        </thead>
        <tbody id="achievementBody">
          <!-- Dynamisch generierte Erfolge -->
        </tbody>
      </table>
    </div>
    <div class="rewards-section">
      <h2 data-translate="rewardsTitle">Belohnungen</h2>
      <ul id="rewardList"></ul>
    </div>
  </div>
  
  <!-- Leaderboard -->
  <div class="leaderboard">
    <h2 data-translate="leaderboardTitle">Highscore-Liste ⭐</h2>
    <table id="leaderboardTable">
      <thead>
        <tr>
          <th data-translate="rank">Platz</th>
          <th data-translate="words">Wörter</th>
          <th data-translate="xp">XP</th>
        </tr>
      </thead>
      <tbody id="leaderboardBody">
        <!-- Dynamisch befüllte Zeilen -->
      </tbody>
    </table>
  </div>
  
  <!-- End Session Popup -->
  <div id="endSessionPopup" style="display:none;">
    <!-- Der Popup-Inhalt wird dynamisch befüllt -->
  </div>
  
  <script>
    /* --- Übersetzungs-Objekt mit 3 Sprachen --- */
    const translations = {
      "de": {
        "title": "Schreibabenteuer DemusOpalium",
        "playerName": "Spielername",
        "playerRank": "Rang:",
        "playerPoints": "Wissenspunkte:",
        "newNamePlaceholder": "Neuen Namen eingeben",
        "changeNameBtn": "Namen ändern",
        "shopTitle": "Shop",
        "profileRefresh": "Profil Refresh",
        "gluecksbringerRefresh": "Glücksbringer Refresh",
        "inventoryTitle": "Inventar",
        "infoTitle": "Willkommen bei Schreibabenteuer DemusOpalium! ✨",
        "infoOverviewTitle": "📜 Überblick:",
        "infoOverview": "Schreibe in variablen Zeitmodi (1–5 Minuten) spannende Challenges – egal ob Freewrite, Adventure, Copy Challenge oder Hardcore. Nur Tippen, kein Kopieren!",
        "infoModesTitle": "🚀 Modi:",
        "infoModes": "Freewrite, Adventure (gegen den Wort-Boss), Copy Challenge und Hardcore.",
        "infoNoticeTitle": "⚠️ Hinweis:",
        "infoNotice": "Copy-Paste ist verboten! Schummeln gibt‘s nicht!",
        "infoRewardsTitle": "🎉 Belohnungen & Erfolge:",
        "infoRewards": "Schalte Erfolge frei und erhalte coole Rewards – dein Fortschritt wird gespeichert!",
        "chooseTheme": "Theme wählen:",
        "chooseFont": "Schriftart wählen:",
        "difficulty": "Schwierigkeitsgrad:",
        "category": "Kategorie:",
        "shareResults": "Ergebnisse Teilen",
        "saveProfile": "Profil Speichern",
        "loadProfile": "Profil Laden",
        "time": "Time: 01:00",
        "words": "Words: 0",
        "goal": "Goal: 0/100",
        "xp": "XP: 0",
        "level": "Level: 1",
        "wpm": "WPM: 0",
        "apm": "APM: 0",
        "hotStreak": "HOT STREAK!",
        "copyScore": "Copy Score: 0",
        "mode": "Modus:",
        "freeMode": "Freewrite (keine Strafe)",
        "hardcoreMode": "Hardcore (Text löschen)",
        "creativeMode": "Kreativ (mit Schreibimpuls)",
        "adventureMode": "Adventure (Boss & EPIC)",
        "copyMode": "Copy Challenge",
        "timeMode": "Zeitmodus:",
        "prepareGame": "Spiel vorbereiten",
        "reset": "Reset",
        "showPrompt": "Schreibimpuls anzeigen",
        "checkSentence": "Satz prüfen",
        "achievementsTitle": "Erfolge",
        "achievementCategory": "Kategorie:",
        "achievementDifficulty": "Schwierigkeitsgrad:",
        "all": "Alle",
        "easy": "Leicht",
        "normal": "Normal",
        "hard": "Schwer/Episch",
        "icon": "Icon",
        "achievement": "Erfolg",
        "condition": "Bedingung",
        "status": "Status",
        "rewardsTitle": "Belohnungen",
        "leaderboardTitle": "Highscore-Liste ⭐",
        "rank": "Platz",
        "writePlaceholder": "Hier beginnen zu schreiben..."
      },
      "en": {
        "title": "Writing Adventure DemusOpalium",
        "playerName": "Player Name",
        "playerRank": "Rank:",
        "playerPoints": "Knowledge Points:",
        "newNamePlaceholder": "Enter new name",
        "changeNameBtn": "Change Name",
        "shopTitle": "Shop",
        "profileRefresh": "Refresh Profile",
        "gluecksbringerRefresh": "Refresh Charm",
        "inventoryTitle": "Inventory",
        "infoTitle": "Welcome to Writing Adventure DemusOpalium! ✨",
        "infoOverviewTitle": "📜 Overview:",
        "infoOverview": "Write exciting challenges in variable time modes (1–5 minutes) – whether it's Freewrite, Adventure, Copy Challenge or Hardcore. Just type, no copying!",
        "infoModesTitle": "🚀 Modes:",
        "infoModes": "Freewrite, Adventure (against the Word Boss), Copy Challenge and Hardcore.",
        "infoNoticeTitle": "⚠️ Notice:",
        "infoNotice": "Copy-paste is prohibited! No cheating allowed!",
        "infoRewardsTitle": "🎉 Rewards & Achievements:",
        "infoRewards": "Unlock achievements and receive cool rewards – your progress will be saved!",
        "chooseTheme": "Choose Theme:",
        "chooseFont": "Choose Font:",
        "difficulty": "Difficulty:",
        "category": "Category:",
        "shareResults": "Share Results",
        "saveProfile": "Save Profile",
        "loadProfile": "Load Profile",
        "time": "Time: 01:00",
        "words": "Words: 0",
        "goal": "Goal: 0/100",
        "xp": "XP: 0",
        "level": "Level: 1",
        "wpm": "WPM: 0",
        "apm": "APM: 0",
        "hotStreak": "HOT STREAK!",
        "copyScore": "Copy Score: 0",
        "mode": "Mode:",
        "freeMode": "Freewrite (no penalty)",
        "hardcoreMode": "Hardcore (text deletion)",
        "creativeMode": "Creative (with writing prompt)",
        "adventureMode": "Adventure (Boss & EPIC)",
        "copyMode": "Copy Challenge",
        "timeMode": "Time Mode:",
        "prepareGame": "Prepare Game",
        "reset": "Reset",
        "showPrompt": "Show Writing Prompt",
        "checkSentence": "Check Sentence",
        "achievementsTitle": "Achievements",
        "achievementCategory": "Category:",
        "achievementDifficulty": "Difficulty:",
        "all": "All",
        "easy": "Easy",
        "normal": "Normal",
        "hard": "Hard/Epic",
        "icon": "Icon",
        "achievement": "Achievement",
        "condition": "Condition",
        "status": "Status",
        "rewardsTitle": "Rewards",
        "leaderboardTitle": "Highscore List ⭐",
        "rank": "Rank",
        "writePlaceholder": "Start writing here..."
      },
      "sw": {
        "title": "Mchezo wa Kuandika DemusOpalium",
        "playerName": "Jina la Mchezaji",
        "playerRank": "Cheo:",
        "playerPoints": "Alama za Maarifa:",
        "newNamePlaceholder": "Weka jina jipya",
        "changeNameBtn": "Badilisha Jina",
        "shopTitle": "Duka",
        "profileRefresh": "Sasisha Wasifu",
        "gluecksbringerRefresh": "Sasisha Vibonzo",
        "inventoryTitle": "Hazina",
        "infoTitle": "Karibu katika Mchezo wa Kuandika DemusOpalium! ✨",
        "infoOverviewTitle": "📜 Muhtasari:",
        "infoOverview": "Andika changamoto za kusisimua kwa dakika 1–5 – iwe ni ya ubunifu, ya shindani au ya ukali. Andika tu, usikite nakili!",
        "infoModesTitle": "🚀 Mipangilio:",
        "infoModes": "Freewrite, Adventure (kupambana na Bosi wa Maneno), Copy Challenge na Hardcore.",
        "infoNoticeTitle": "⚠️ Onyo:",
        "infoNotice": "Nakili-paste ni marufuku! Usishindwe!",
        "infoRewardsTitle": "🎉 Tuzo na Mafanikio:",
        "infoRewards": "Fungua mafanikio na pokea tuzo nzuri – maendeleo yako yatahifadhiwa!",
        "chooseTheme": "Chagua Mandhari:",
        "chooseFont": "Chagua Aina ya Herufi:",
        "difficulty": "Ugonjwa:",
        "category": "Jamii:",
        "shareResults": "Shiriki Matokeo",
        "saveProfile": "Hifadhi Wasifu",
        "loadProfile": "Pakia Wasifu",
        "time": "Wakati: 01:00",
        "words": "Maneno: 0",
        "goal": "Lengo: 0/100",
        "xp": "XP: 0",
        "level": "Kiwango: 1",
        "wpm": "Maneno kwa Dakika: 0",
        "apm": "APM: 0",
        "hotStreak": "MFAKA ZA MOJA!",
        "copyScore": "Alama za Nakili: 0",
        "mode": "Mpangilio:",
        "freeMode": "Freewrite (hakuna adhabu)",
        "hardcoreMode": "Hardcore (maandishi yatafutwa)",
        "creativeMode": "Ubunifu (na dalili ya kuandika)",
        "adventureMode": "Adventure (Bosi & EPIC)",
        "copyMode": "Copy Challenge",
        "timeMode": "Muda:",
        "prepareGame": "Andaa Mchezo",
        "reset": "Washa upya",
        "showPrompt": "Onyesha Dalili ya Kuandika",
        "checkSentence": "Angalia Sentensi",
        "achievementsTitle": "Mafanikio",
        "achievementCategory": "Jamii:",
        "achievementDifficulty": "Ugonjwa:",
        "all": "Zote",
        "easy": "Rahisi",
        "normal": "Kawaida",
        "hard": "Gumu/Epiki",
        "icon": "Picha",
        "achievement": "Mafanikio",
        "condition": "Hali",
        "status": "Hali",
        "rewardsTitle": "Tuzo",
        "leaderboardTitle": "Orodha ya Nafasi ⭐",
        "rank": "Cheo",
        "writePlaceholder": "Anza kuandika hapa..."
      }
    };

    // Aktuelle Sprache (Standard: Deutsch)
    let currentLanguage = 'de';

    // Sprachumschaltung zyklisch: de -> en -> sw -> de ...
    function toggleLanguage() {
      if (currentLanguage === 'de') { currentLanguage = 'en'; }
      else if (currentLanguage === 'en') { currentLanguage = 'sw'; }
      else { currentLanguage = 'de'; }
      updateLanguage();
    }

    // Keypress-Listener, der in jeder Zeile nach 58 Zeichen automatisch einen Zeilenumbruch einfügt
    document.getElementById("writeArea").addEventListener("keypress", function(e) {
      if (e.key === "Enter") { return; }
      let lines = this.innerText.split("\n");
      let currentLine = lines[lines.length - 1];
      if (currentLine.length >= 58) {
        e.preventDefault();
        document.execCommand("insertHTML", false, "<br>" + e.key);
      }
    });

    // Aktualisiert alle Elemente mit Übersetzungsschlüsseln
    function updateLanguage() {
      document.documentElement.lang = currentLanguage;
      document.title = translations[currentLanguage].title;
      document.querySelectorAll('[data-translate]').forEach(elem => {
        let key = elem.getAttribute('data-translate');
        if (translations[currentLanguage][key]) {
          elem.textContent = translations[currentLanguage][key];
        }
      });
      document.querySelectorAll('[data-translate-placeholder]').forEach(elem => {
        let key = elem.getAttribute('data-translate-placeholder');
        if (translations[currentLanguage][key]) {
          elem.placeholder = translations[currentLanguage][key];
        }
      });
      document.getElementById('langBtn').textContent = (currentLanguage === 'de') ? 'EN' : (currentLanguage === 'en' ? 'SW' : 'DE');
    }
    updateLanguage();

    /* --- Restlicher JavaScript-Code (alle Funktionen und Event-Listener wie im Basis-Code) --- */
    let timerInterval = null, idleTimeout = null;
    let sessionActive = false;
    let sessionStartTime = null;
    let remainingTime = 60;
    let keyPressCount = 0;
    let hotStreakCounter = 0;
    let lastKeyTime = 0;
    let hotStreakRequired = 20;
    let hotStreakTimeThreshold = 250;
    let waitingForStart = false;
    let copyScore = 0;
    let currentTargetSentence = "";

    let userStats = { 
      xp: 0,
      totalWords: 0,
      longestSession: 0,
      level: 1,
      playerName: "Spielername",
      wissenspunkte: 500,
      profileImage: "",
      inventory: {
        profileImages: [],
        gluecksbringer: []
      }
    };

    const availableProfileImages = [
      "https://i.imgur.com/2cqISZ8.png",
      "https://i.imgur.com/WCghhSg.png",
      "https://i.imgur.com/AG8MXbR.png",
      "https://i.imgur.com/67lln3j.png",
      "https://i.imgur.com/NUfCLza.png",
      "https://i.imgur.com/dyOkN0p.png",
      "https://i.imgur.com/At7GxhG.png"
    ];
    const availableGluecksbringer = [
      "https://i.imgur.com/Qg6no9G.png",
      "https://i.imgur.com/N74fFUp.png",
      "https://i.imgur.com/zrOdwI6.png",
      "https://i.imgur.com/3atajUk.png",
      "https://i.imgur.com/3PAQktM.png",
      "https://i.imgur.com/E3B6FT4.png",
      "https://i.imgur.com/PsEpoi4.png"
    ];
    const shopProfileItems = availableProfileImages.map((url, index) => {
      return { id: "Profilbild " + (index + 1), imgUrl: url, price: 150 + (index * 25) };
    });
    const shopGluecksbringerItems = availableGluecksbringer.map((url, index) => {
      return { id: "Glücksbringer " + (index + 1), imgUrl: url, price: 150 + (index * 25) };
    });
    const secretKey = "geheimerSchluessel123";
    function generateHash(input) {
      let hash = 0;
      for (let i = 0; i < input.length; i++) {
        const chr = input.charCodeAt(i);
        hash = ((hash << 5) - hash) + chr;
        hash |= 0;
      }
      return hash;
    }

/* --- Neue Satzbibliotheken --- */
const sentenceLibraries = {
  standard: {
    easy: [
      "Der Vogel singt im Morgenlicht.",
      "Die Blume öffnet ihre Knospen.",
      "Der Wind weht sanft durch die Bäume.",
      "Das Wasser plätschert im Bach.",
      "Die Sonne lacht am Himmel.",
      "Das Mädchen springt fröhlich.",
      "Der Junge rennt über den Platz.",
      "Die Katze spielt mit einem Ball.",
      "Der Hund bellt freudig.",
      "Das Buch liegt auf dem Sofa.",
      "Die Lampe leuchtet hell.",
      "Der Regen klopft an das Fenster.",
      "Der Schnee glitzert im Licht.",
      "Die Uhr tickt leise.",
      "Der Tisch ist sauber und ordentlich.",
      "Das Kind malt ein buntes Bild.",
      "Der Apfel schmeckt süß.",
      "Die Milch ist frisch und kühl.",
      "Der Kaffee duftet verführerisch.",
      "Das Brot ist warm und knusprig.",
      "Die Vögel fliegen hoch am Himmel.",
      "Der Baum ist alt und stark.",
      "Die Blätter rascheln im Wind.",
      "Der Fluss fließt ruhig dahin.",
      "Die Sterne funkeln in der Nacht.",
      "Das Auto parkt vor dem Haus.",
      "Der Schmetterling tanzt im Garten.",
      "Die Maus huscht unter dem Stuhl.",
      "Der Frosch quakt am Teich.",
      "Die Kerze brennt ruhig."
    ],
    normal: [
      "Ein sanfter Morgennebel umhüllt den stillen See, während die ersten Sonnenstrahlen den Horizont berühren.",
      "Die sanfte Melodie eines Klaviers erfüllt den Raum und weckt Erinnerungen an vergangene Zeiten.",
      "In einem belebten Café treffen sich Freunde, um sich bei einem warmen Getränk auszutauschen.",
      "Der Duft frisch gebackener Brötchen verbreitet sich in der kleinen Stadt und lockt die Menschen an.",
      "Die imposante Architektur des alten Schlosses zeugt von vergangener Pracht und Geschichte.",
      "Ein leiser Windhauch lässt die Blätter der Bäume in harmonischem Rhythmus tanzen.",
      "Die klare Abenddämmerung offenbart die Silhouetten der Berge am fernen Horizont.",
      "Ein ruhiger Fluss schlängelt sich durch das grüne Tal und spiegelt den blauen Himmel wider.",
      "Die ersten Frühlingsblumen brechen beharrlich durch den winterlichen Boden.",
      "Ein alter Mann sitzt in einem Park und liest die Zeitung, umgeben von der Ruhe der Natur.",
      "Der sanfte Klang einer entfernten Kirchenglocke erfüllt die stillen Straßen der Stadt.",
      "Ein Vogel singt sein Lied, während die Natur in einem bunten Farbenspiel erblüht.",
      "Die Wärme der Nachmittagssonne füllt den Raum und verleiht ihm eine gemütliche Atmosphäre.",
      "Die kunstvoll gestalteten Fassaden der Gebäude erzählen von einer reichen kulturellen Vergangenheit.",
      "Ein sanftes Lächeln und freundliche Worte erhellen den trüben Tag.",
      "Die leise fallenden Regentropfen erzeugen eine beruhigende Melodie, die den Geist entspannt.",
      "Die flimmernden Lichter der Stadt verleihen der Nacht einen magischen Glanz.",
      "Ein zarter Duft von Lavendel und Rosmarin erfüllt den Garten an einem milden Abend.",
      "Die klaren Sterne am Nachthimmel offenbaren ein beeindruckendes Schauspiel der Natur.",
      "Ein schattiger Pfad im Wald lädt zu einem entspannten Spaziergang ein."
    ],
    hard: [
      "Im Zwielicht der untergehenden Sonne entfaltet sich ein Panorama, das von majestätischer Schönheit und tiefer Melancholie geprägt ist.",
      "Die harmonische Verbindung von Licht und Schatten verleiht der alten Ruine eine fast mystische Ausstrahlung.",
      "Zwischen den sanften Tönen eines orchestralen Meisterwerks und dem Rauschen des Windes liegt die Poesie der Natur verborgen.",
      "Die unerschütterliche Stille einer verlassenen Landschaft bildet den Kontrast zu den lebhaften Erinnerungen vergangener Zeiten.",
      "Ein einsamer Wanderer durchquert das raue Terrain, getrieben von der Sehnsucht nach dem Unbekannten und dem Abenteuer.",
      "Die subtile Wechselwirkung zwischen den Elementen verleiht dem Naturpanorama eine tiefe, fast spirituelle Dimension.",
      "In der Stille der Nacht offenbaren sich die geheimen Geschichten der alten Bäume, die Zeugen vergangener Epochen sind.",
      "Die melancholische Schönheit des winterlichen Waldes wird durch den leisen Klang fallender Schneeflocken unterstrichen.",
      "Ein abstrahierter Blick auf die Vergänglichkeit des Lebens offenbart die tiefgründige Symphonie der existenziellen Erfahrung.",
      "Die scharfen Kontraste von Licht und Dunkelheit zeichnen das Bild einer epischen, unvergänglichen Landschaft.",
      "Die raffinierte Verbindung aus Architektur und Natur in einem historischen Bauwerk erweckt die Poesie vergangener Epochen zum Leben.",
      "Zwischen den Zeilen eines alten Gedichts verbirgt sich die stille Melancholie einer längst vergangenen Ära.",
      "Der kraftvolle Ausdruck menschlicher Emotionen spiegelt sich in der raumgreifenden Weite eines verlassenen Industriekomplexes wider.",
      "Die unermessliche Tiefe des Nachthimmels offenbart ein Kaleidoskop aus funkelnden Sternen und flüchtigen Gedanken.",
      "In der Stille einer mondbeschienenen Landschaft verschmelzen Realität und Traum zu einem unvergänglichen Augenblick."
    ]
  },
  realschule: {
    easy: [
      "Der Schüler schreibt eifrig in sein Heft.",
      "Die Lehrerin erklärt das Thema verständlich.",
      "Im Klassenzimmer herrscht eine ruhige Atmosphäre.",
      "Die Schüler lernen gemeinsam im Gruppenraum.",
      "Der Stundenplan ist gut strukturiert.",
      "Die Bibliothek der Schule ist modern ausgestattet.",
      "Ein Test wird regelmäßig geschrieben.",
      "Die Hausaufgaben werden pünktlich abgegeben.",
      "Im Pausenhof spielt man gemeinsam.",
      "Die Schulbücher sind farbenfroh und informativ.",
      "Die Tafel ist sauber geschrieben.",
      "Die Schüler arbeiten konzentriert an ihren Aufgaben.",
      "Ein Experte besucht den Unterricht.",
      "Der Lehrplan umfasst viele spannende Themen.",
      "Die Lehrer unterstützen die Schüler individuell.",
      "In der Schulcafeteria gibt es gesunde Snacks.",
      "Die Klassenzimmer sind hell und freundlich.",
      "Die Schulausflüge bereichern das Lernen.",
      "Die Schüler diskutieren lebhaft in der Pause.",
      "Der Direktor betont die Bedeutung der Bildung.",
      "Die Projekte fördern die Kreativität der Schüler.",
      "Der Unterricht beginnt pünktlich.",
      "Die Lehrer motivieren die Klasse stets.",
      "Die Schulbibliothek bietet viele spannende Bücher.",
      "Die Schüler präsentieren ihre Projekte vor der Klasse.",
      "Der Sportunterricht macht den Schülern Spaß.",
      "Die Schulveranstaltungen sind gut organisiert.",
      "Die Schulbusse fahren pünktlich ab.",
      "Die Schüler üben Mathematik mit Begeisterung.",
      "Die Schulatmosphäre ist angenehm und lernfördernd."
    ],
    normal: [
      "Im Realschulunterricht werden theoretische Grundlagen mit praktischen Anwendungen verbunden, um den Schülern ein tiefgreifendes Verständnis zu vermitteln.",
      "Die Lehrkräfte setzen moderne Technologien ein, um den Unterricht interaktiv und abwechslungsreich zu gestalten.",
      "Die Schulbibliothek bietet eine breite Auswahl an Fachbüchern, die das Lernen unterstützen.",
      "Schüler werden ermutigt, eigene Projekte zu entwickeln und ihre Kreativität einzubringen.",
      "Der fächerübergreifende Unterricht fördert das analytische Denken und die Problemlösungsfähigkeiten der Schüler.",
      "Die praxisnahen Experimente im Chemieunterricht wecken das Interesse an naturwissenschaftlichen Zusammenhängen.",
      "Die schulische Umgebung schafft einen Raum, in dem Lernen und soziales Miteinander Hand in Hand gehen.",
      "Die regelmäßigen Exkursionen erweitern den Horizont der Schüler und bringen Theorie und Praxis zusammen.",
      "Der strukturierte Lehrplan legt den Grundstein für eine fundierte Allgemeinbildung.",
      "In interaktiven Workshops werden komplexe Themen anschaulich vermittelt.",
      "Die Lehrer legen großen Wert auf individuelle Förderung und Unterstützung jedes einzelnen Schülers.",
      "Moderne Unterrichtsmethoden verbinden digitale Medien mit klassischem Frontalunterricht.",
      "Der Unterricht ist so gestaltet, dass er die Neugier der Schüler weckt und zum eigenständigen Denken anregt.",
      "Die praktische Anwendung theoretischer Kenntnisse wird in vielfältigen Projekten erprobt.",
      "Die Schule fördert eine Atmosphäre des respektvollen Miteinanders und der Zusammenarbeit.",
      "Schüler werden darin bestärkt, ihre eigenen Ideen zu entwickeln und kritisch zu hinterfragen.",
      "Die Einbindung von außerschulischen Experten bereichert den Unterricht nachhaltig.",
      "In kreativen Arbeitsgruppen werden innovative Lösungsansätze erarbeitet.",
      "Der Unterricht ermöglicht den Schülern, ihre Kompetenzen in verschiedenen Fachbereichen zu vertiefen.",
      "Ein ausgewogenes Verhältnis von Theorie und Praxis zeichnet den modernen Realschulunterricht aus."
    ],
    hard: [
      "Die Realschule fordert ihre Schüler mit einem anspruchsvollen Lehrplan heraus, der tiefgehende analytische Fähigkeiten erfordert.",
      "Die Integration von interdisziplinären Projekten fördert ein ganzheitliches Verständnis komplexer Themen.",
      "Die intensive Auseinandersetzung mit wissenschaftlichen Methoden bereitet die Schüler auf zukünftige Herausforderungen vor.",
      "Ein hohes Maß an Selbstdisziplin und kritischem Denken ist für den erfolgreichen Verlauf des Unterrichts unerlässlich.",
      "Die Realschule etabliert innovative Lernkonzepte, die traditionelle Lehrmethoden mit modernen Technologien verbinden.",
      "Die individuelle Förderung der Schüler steht im Mittelpunkt eines pädagogischen Ansatzes, der auf nachhaltigem Lernerfolg basiert.",
      "Die Verknüpfung von Theorie und Praxis in fächerübergreifenden Projekten ermöglicht ein tiefgreifendes Verständnis der Lerninhalte.",
      "Der analytische Diskurs im Unterricht schult die kritische Reflexion und das strategische Denken der Schüler.",
      "Die enge Zusammenarbeit zwischen Lehrkräften und Schülern fördert ein offenes und kreatives Lernklima.",
      "Die Realschule setzt auf projektbasiertes Lernen, um die intrinsische Motivation der Schüler zu steigern.",
      "Die komplexen mathematischen und naturwissenschaftlichen Inhalte werden durch praxisnahe Beispiele veranschaulicht.",
      "Die Auseinandersetzung mit literarischen Werken erweitert den Horizont und fördert interdisziplinäres Denken.",
      "Die Vermittlung von methodischen Kompetenzen bereitet die Schüler auf die Anforderungen einer globalisierten Welt vor.",
      "Die kritische Analyse gesellschaftlicher Entwicklungen wird im Unterricht durch fundierte Diskussionen vertieft.",
      "Die Realschule etabliert ein System, das eigenständiges und kooperatives Lernen in einem anspruchsvollen Rahmen fördert."
    ]
  },
  gymnasium: {
    easy: [
      "Der Schüler liest ein spannendes Buch im Park.",
      "Die Lehrerin erklärt geduldig die schwierigen Aufgaben.",
      "Die Klassenarbeit wird gewissenhaft geschrieben.",
      "Im Unterricht werden neue Ideen diskutiert.",
      "Die Schultasche ist gut gepackt mit allen Büchern.",
      "Der Stundenplan ist abwechslungsreich gestaltet.",
      "Die Schulbibliothek bietet viele interessante Bücher.",
      "Die Pausen sind ruhig und erholsam.",
      "Die Schüler üben gemeinsam für den Test.",
      "Der Klassenraum ist hell und freundlich.",
      "Die Tafel ist mit Kreide sauber beschrieben.",
      "Ein Gruppenprojekt fördert den Zusammenhalt.",
      "Der Lehrer erklärt die Mathematikaufgaben klar.",
      "Die Hausaufgaben werden sorgfältig erledigt.",
      "Die Schüler schreiben Notizen während des Unterrichts.",
      "Die Pause wird genutzt, um miteinander zu reden.",
      "Der Schüler beteiligt sich aktiv am Unterricht.",
      "Die Schülerin liest leise in der Ecke.",
      "Das Referat wird überzeugend vorgetragen.",
      "Die Lehrerin lobt das Engagement der Schüler.",
      "Die Schulprojekte werden kreativ umgesetzt.",
      "Der Test findet in einem ruhigen Raum statt.",
      "Die Schüler arbeiten in kleinen Gruppen.",
      "Der Lehrer verteilt die Arbeitsblätter geduldig.",
      "Die Notizen im Heft sind übersichtlich geschrieben.",
      "Der Schüler fragt neugierig nach.",
      "Die Lehrerin erklärt mit Begeisterung.",
      "Der Unterricht fördert das logische Denken.",
      "Die Klasse diskutiert aktuelle Themen.",
      "Der Unterricht inspiriert zu kreativen Ideen."
    ],
    normal: [
      "Im Gymnasium wird ein umfassender Lehrplan verfolgt, der klassische und moderne Bildungselemente harmonisch vereint.",
      "Die Schüler analysieren literarische Werke, um ein tiefes Verständnis für historische und kulturelle Zusammenhänge zu entwickeln.",
      "Der interdisziplinäre Unterricht regt zu kritischen Diskussionen und kreativen Lösungsansätzen an.",
      "Die engagierte Lehrkraft fördert durch innovative Methoden das analytische Denken der Schüler.",
      "Die intensive Beschäftigung mit naturwissenschaftlichen Phänomenen erweitert das Verständnis für die Welt.",
      "In interaktiven Seminaren werden komplexe Theorien anschaulich vermittelt.",
      "Die Auseinandersetzung mit philosophischen Fragestellungen schärft das Urteilsvermögen der Jugendlichen.",
      "Die modernen Lehrmethoden ermöglichen es den Schülern, Wissen eigenständig zu erarbeiten und kritisch zu hinterfragen.",
      "Die schulischen Projekte fördern die Entwicklung kreativer und interdisziplinärer Kompetenzen.",
      "Der Unterricht schafft Raum für tiefe Reflexionen und anregende Diskussionen.",
      "Das Gymnasium legt besonderen Wert auf die Förderung der sprachlichen Ausdrucksfähigkeit.",
      "Die analytischen Aufgaben im Mathematikunterricht erfordern ein hohes Maß an logischem Denken.",
      "Die kritische Auseinandersetzung mit historischen Ereignissen regt zum eigenständigen Denken an.",
      "Die Erarbeitung komplexer Problemstellungen fördert die Fähigkeit, abstrakte Zusammenhänge zu erkennen.",
      "Die Integration moderner Technologien unterstützt den Lernprozess und eröffnet neue Perspektiven.",
      "Die Schüler erarbeiten in Diskussionsrunden fundierte Argumente zu aktuellen gesellschaftlichen Themen.",
      "Das breit gefächerte Bildungsangebot fördert sowohl die intellektuelle als auch die persönliche Entwicklung.",
      "Die intensive Beschäftigung mit klassischer Literatur erweitert den Horizont und schult das kritische Denken.",
      "Die praxisnahen Projekte verknüpfen theoretisches Wissen mit realen Erfahrungen.",
      "Die engagierte Auseinandersetzung mit naturwissenschaftlichen Fragestellungen stärkt das analytische Denkvermögen."
    ],
    hard: [
      "Im rigorosen Lehrplan des Gymnasiums werden die Schüler mit anspruchsvollen Aufgaben konfrontiert, die tiefgehende Analysen und präzises logisches Denken erfordern.",
      "Die kritische Auseinandersetzung mit komplexen literarischen Texten fördert das Verständnis für die nuancierten Ausdrucksformen der Sprache.",
      "Die intensive Beschäftigung mit historischen Ereignissen schult das analytische Denken und die Fähigkeit, verschiedene Perspektiven einzunehmen.",
      "Die interdisziplinären Projekte verlangen von den Schülern, abstrakte Konzepte zu erfassen und in praktische Lösungsansätze zu überführen.",
      "Die Synthese aus klassischer Literatur und moderner Wissenschaft in den Unterrichtseinheiten schafft einen fruchtbaren Boden für innovative Ideen.",
      "Die detaillierte Analyse philosophischer Fragestellungen fördert ein tiefes Verständnis der menschlichen Existenz.",
      "Die präzise Untersuchung mathematischer Theorien erfordert ein hohes Maß an methodischer Genauigkeit.",
      "Die kritische Reflexion gesellschaftlicher Entwicklungen wird im Unterricht durch fundierte Diskussionen und praxisnahe Fallstudien vertieft.",
      "Die Integration von digitaler Bildung in den Lehrplan eröffnet den Schülern neue Möglichkeiten zur interdisziplinären Vernetzung.",
      "Die systematische Auseinandersetzung mit naturwissenschaftlichen Experimenten schärft das Bewusstsein für die Komplexität der Welt.",
      "Die akademische Diskussion über zeitgenössische Theorien befördert das kritische Denken und die intellektuelle Reife der Schüler.",
      "Die Herausforderung, abstrakte Konzepte verständlich zu machen, wird im Gymnasium als wesentlicher Bestandteil der Bildung betrachtet.",
      "Die Vermittlung von interkulturellem Wissen erweitert den Horizont und fördert das globale Verständnis.",
      "Die enge Verknüpfung von Theorie und Praxis in forschungsorientierten Projekten stärkt die methodischen Kompetenzen der Lernenden.",
      "Die intensiven Auseinandersetzungen mit komplexen Problemstellungen bereiten die Schüler auf die Herausforderungen der modernen Wissenschaft vor."
    ]
  },
  medizin: {
    easy: [
      "Der Arzt misst den Blutdruck des Patienten.",
      "Die Krankenschwester wechselt den Verband.",
      "Das Krankenhaus ist modern ausgestattet.",
      "Die Patienten warten geduldig im Wartezimmer.",
      "Der Radiologe untersucht ein Röntgenbild.",
      "Das Medikament wird sorgfältig dosiert.",
      "Die Therapie beginnt pünktlich.",
      "Der Patient folgt den Anweisungen des Arztes.",
      "Die Pflegekräfte kümmern sich liebevoll um die Patienten.",
      "Das OP-Team bereitet sich auf die Operation vor.",
      "Die Behandlung erfolgt in einem sterilen Raum.",
      "Der Arzt erklärt die Diagnose verständlich.",
      "Die Patientenakten sind gut organisiert.",
      "Das medizinische Personal arbeitet Hand in Hand.",
      "Der Patient bekommt regelmäßig seine Medikamente.",
      "Die Untersuchungsergebnisse werden sorgfältig dokumentiert.",
      "Die Krankenschwester assistiert bei der Untersuchung.",
      "Das Krankenhausflair ist ruhig und geordnet.",
      "Der Arzt verordnet eine schonende Therapie.",
      "Die Patienten werden freundlich begrüßt.",
      "Die Notaufnahme ist rund um die Uhr geöffnet.",
      "Das medizinische Gerät zeigt klare Ergebnisse.",
      "Der Patient erholt sich nach der Operation.",
      "Die Pflegekräfte wechseln die Infusionen.",
      "Die Untersuchung im Labor ist erfolgreich.",
      "Die Genesung des Patienten verläuft gut.",
      "Der Arzt führt eine gründliche Untersuchung durch.",
      "Die Behandlungsmethoden sind modern und effektiv.",
      "Die Patienten werden regelmäßig kontrolliert.",
      "Die medizinische Betreuung ist fürsorglich und kompetent."
    ],
    normal: [
      "In der modernen Klinik werden fortschrittliche Diagnoseverfahren eingesetzt, um Krankheiten präzise zu erkennen.",
      "Die interdisziplinäre Zusammenarbeit der Ärzte gewährleistet eine umfassende Betreuung der Patienten.",
      "Die klinischen Studien tragen zur Entwicklung innovativer Behandlungsmethoden bei.",
      "Die effektive Kommunikation zwischen den medizinischen Fachkräften optimiert den Behandlungsprozess.",
      "Die patientenzentrierte Versorgung steht im Mittelpunkt des therapeutischen Konzepts.",
      "Die chirurgischen Eingriffe werden unter strengsten hygienischen Bedingungen durchgeführt.",
      "Die regelmäßigen Fortbildungen des medizinischen Personals sichern den hohen Standard der Behandlung.",
      "Die moderne Medizintechnik ermöglicht eine präzise Diagnostik und Therapieplanung.",
      "Die interdisziplinären Teams arbeiten Hand in Hand, um die bestmögliche Patientenversorgung zu gewährleisten.",
      "Die therapeutischen Maßnahmen basieren auf fundierten wissenschaftlichen Erkenntnissen.",
      "Die umfassende Betreuung in der Notaufnahme gewährleistet eine schnelle Erstversorgung.",
      "Die innovative Telemedizin verbessert den Zugang zu medizinischer Expertise.",
      "Die diagnostischen Verfahren werden kontinuierlich weiterentwickelt, um immer genauere Ergebnisse zu erzielen.",
      "Die strukturierte Patientenaufnahme sorgt für einen reibungslosen Ablauf im Krankenhaus.",
      "Die enge Zusammenarbeit zwischen Pflegekräften und Ärzten optimiert den Heilungsprozess.",
      "Die evidenzbasierte Medizin bildet die Grundlage für moderne Therapieansätze.",
      "Die patientenorientierte Versorgung ermöglicht eine individuell angepasste Behandlung.",
      "Die Integration von digitalen Technologien revolutioniert die medizinische Diagnostik.",
      "Die präzise Erfassung von Patientendaten ist essenziell für den Behandlungserfolg.",
      "Die interdisziplinäre Fallbesprechung fördert die Entwicklung maßgeschneiderter Therapiepläne."
    ],
    hard: [
      "In hochspezialisierten medizinischen Zentren werden neuartige Therapieansätze auf Basis genetischer Analysen entwickelt.",
      "Die personalisierte Medizin nutzt individuelle Patientenprofile, um maßgeschneiderte Behandlungsstrategien zu konzipieren.",
      "Die Integration von robotergestützter Chirurgie revolutioniert den operativen Eingriff in kritischen Fällen.",
      "Die innovativen immuntherapeutischen Verfahren bieten Hoffnung bei der Behandlung komplexer Erkrankungen.",
      "Die interdisziplinäre Zusammenarbeit in spezialisierten Forschungslabors ermöglicht bahnbrechende Erkenntnisse in der Onkologie.",
      "Die Anwendung modernster Bildgebungstechniken führt zu einer präzisen Lokalisierung und Analyse pathologischer Befunde.",
      "Die Entwicklung zielgerichteter pharmakologischer Therapien basiert auf detaillierten molekularen Profilen der Patienten.",
      "Die Einführung telemedizinischer Überwachungssysteme verbessert die kontinuierliche Betreuung chronisch Kranker.",
      "Die klinische Forschung legt den Grundstein für die Etablierung revolutionärer Behandlungsmethoden.",
      "Die enge Verzahnung von Forschung und klinischer Praxis ermöglicht einen kontinuierlichen medizinischen Fortschritt.",
      "Die komplexen immunologischen Prozesse im Körper werden durch innovative diagnostische Ansätze genauer analysiert.",
      "Die Kombination von Chemotherapie und zielgerichteter Therapie optimiert die Behandlung fortgeschrittener Tumorerkrankungen.",
      "Die patientenspezifische Anpassung von Medikamentendosierungen erfordert präzise genetische Analysen und kontinuierliche Überwachung.",
      "Die interdisziplinäre Fallanalyse in spezialisierten Zentren trägt zur Entwicklung innovativer Therapieprotokolle bei.",
      "Die Implementierung von künstlicher Intelligenz in der Diagnostik eröffnet neue Perspektiven in der modernen Medizin."
    ]
  },
  bank: {
    easy: [
      "Der Kunde betritt die moderne Bankfiliale.",
      "Die Bankberaterin begrüßt den Kunden freundlich.",
      "Das Konto wird sorgfältig überprüft.",
      "Der Geldautomat gibt Bargeld aus.",
      "Die Bank ist gut erreichbar.",
      "Der Kunde füllt einen Antrag aus.",
      "Die Filiale ist hell und einladend.",
      "Der Schalter ist sauber und ordentlich.",
      "Die Bank bietet einfache Finanzdienstleistungen an.",
      "Der Scheck wird von der Bank geprüft.",
      "Die Beratung erfolgt in ruhiger Atmosphäre.",
      "Der Kunde erhält seine Kontoinformationen.",
      "Die Bank ist modern und sicher.",
      "Der Geldtransfer wird zügig durchgeführt.",
      "Die Kunden warten geduldig im Wartebereich.",
      "Das Online-Banking ist benutzerfreundlich.",
      "Die Bank öffnet pünktlich am Morgen.",
      "Der Kredit wird schnell bearbeitet.",
      "Die Beratungsgespräche verlaufen professionell.",
      "Der Kunde nutzt das Geldautomaten-Netzwerk.",
      "Die Bank legt großen Wert auf Datenschutz.",
      "Der Kontoauszug wird digital bereitgestellt.",
      "Der Schalter ist mit freundlichem Personal besetzt.",
      "Die Filiale ist modern eingerichtet.",
      "Der Kunde schließt ein Sparbuch ab.",
      "Die Bank bietet günstige Zinssätze an.",
      "Der Berater erklärt die Konditionen verständlich.",
      "Der Online-Service der Bank funktioniert zuverlässig.",
      "Die Bank unterstützt auch mobile Zahlungen.",
      "Der Kunde verlässt die Bank zufrieden."
    ],
    normal: [
      "Die Bank bietet ein umfangreiches Portfolio an Finanzdienstleistungen, das sowohl traditionelle als auch digitale Angebote umfasst.",
      "Kunden profitieren von individueller Beratung und maßgeschneiderten Kreditlösungen.",
      "Die moderne Bankfiliale verbindet traditionelle Werte mit innovativen Technologien.",
      "Das breit gefächerte Angebot an Anlageprodukten wird durch kompetente Beratung unterstützt.",
      "Die Bank legt großen Wert auf Sicherheit und Datenschutz bei allen Transaktionen.",
      "Die Effizienz der Online-Banking-Plattform ermöglicht schnelle und unkomplizierte Finanztransaktionen.",
      "Die Beratungsgespräche sind geprägt von Fachwissen und kundenorientiertem Service.",
      "Die Bank bietet flexible Kreditoptionen, die den individuellen Bedürfnissen der Kunden gerecht werden.",
      "Das Finanzzentrum ist ein Paradebeispiel für moderne Architektur und technische Innovation.",
      "Die enge Zusammenarbeit mit internationalen Finanzinstituten erweitert das Dienstleistungsangebot.",
      "Die Bank investiert kontinuierlich in die Verbesserung ihrer digitalen Infrastruktur.",
      "Die kompetente Betreuung der Kunden schafft Vertrauen und langfristige Beziehungen.",
      "Die individuelle Finanzplanung wird durch umfassende Analysen unterstützt.",
      "Die Bank setzt auf innovative Technologien, um den Kundenservice zu optimieren.",
      "Die enge Verzahnung von Beratung und digitaler Innovation zeichnet das Geschäftsmodell der Bank aus.",
      "Die Kundenorientierung steht im Zentrum aller Aktivitäten der Bank.",
      "Die transparente Darstellung der Konditionen erleichtert den Entscheidungsprozess für den Kunden.",
      "Die Bank fördert eine Kultur der Offenheit und des gegenseitigen Vertrauens.",
      "Das umfassende Schulungsprogramm für Mitarbeiter sichert einen hohen Servicestandard.",
      "Die kontinuierliche Weiterentwicklung der Finanzprodukte entspricht den dynamischen Marktanforderungen."
    ],
    hard: [
      "Im Zeitalter der digitalen Transformation setzt die Bank auf fortschrittliche Analysemethoden zur Optimierung komplexer Finanzprozesse.",
      "Die Integration von Big-Data-Analysetools ermöglicht eine präzise Risikobewertung und Entscheidungsfindung.",
      "Die strategische Implementierung von Blockchain-Technologien revolutioniert die Sicherheit und Transparenz von Finanztransaktionen.",
      "Die Bank entwickelt maßgeschneiderte Finanzmodelle, um die volatile Marktsituation adäquat zu prognostizieren.",
      "Die Analyse von globalen Finanzmärkten erfordert eine umfassende Expertise und technologische Innovation.",
      "Die fortschrittliche Nutzung von künstlicher Intelligenz unterstützt die Optimierung interner Prozesse.",
      "Die Implementierung von hochsicheren Verschlüsselungstechnologien schützt die sensiblen Kundendaten effektiv.",
      "Die Entwicklung innovativer Investmentstrategien basiert auf detaillierten Marktanalysen und algorithmischen Prognosen.",
      "Die Bank kombiniert traditionelle Finanztheorien mit modernen Datenanalysemethoden, um nachhaltige Lösungen zu entwickeln.",
      "Die Digitalisierung des Finanzsektors erfordert eine kontinuierliche Anpassung an sich wandelnde Marktbedingungen.",
      "Die strategische Beratung erfolgt auf Basis fundierter ökonomischer Modelle und Echtzeitdaten.",
      "Die Komplexität moderner Finanzprodukte wird durch interdisziplinäre Teams systematisch reduziert.",
      "Die enge Zusammenarbeit zwischen IT- und Finanzexperten sichert eine effiziente Umsetzung innovativer Projekte.",
      "Die Implementierung neuer Regulierungsstandards wird durch präzise Compliance-Analysen unterstützt.",
      "Die Bank setzt auf datengetriebene Entscheidungsfindung, um Wettbewerbsvorteile nachhaltig zu sichern."
    ]
  },
  tierwelt: {
    easy: [
      "Der Hund spielt fröhlich im Garten.",
      "Die Katze schnurrt leise auf dem Sofa.",
      "Das Kaninchen hoppelt über den Rasen.",
      "Der Vogel zwitschert im Baum.",
      "Der Fisch schwimmt im Aquarium.",
      "Das Pferd galoppiert auf der Wiese.",
      "Die Maus huscht schnell durch das Haus.",
      "Der Papagei spricht nach.",
      "Das Kaninchen hoppelt uwanjani.",
      "Der Hamster läuft in seinem Rad.",
      "Die Schildkröte bewegt sich langsam.",
      "Der Frosch hüpft am Rand des Teichs.",
      "Die Biene sammelt Nektar.",
      "Der Schmetterling flattert leicht.",
      "Der Elefant grast auf der Weide.",
      "Das Kondoo spielt fröhlich im Freien.",
      "Kondoo liegt friedlich in der Sonne.",
      "Die Ratte huscht durch das Haus.",
      "Ein wilder Hund rennt im Wald.",
      "Der Hund mwitu läuft im Gebüsch.",
      "Der Löwe brüllt laut.",
      "Der Flamingo steht auf einem Bein.",
      "Der Hippopotamus ruht im Wasser.",
      "Der Rhinozeros sucht Schatten unter einem Baum.",
      "Der Elefant planscht im Wasser.",
      "Der Tiger schleicht durch den Dschungel.",
      "Die Taube fliegt sanft.",
      "Der Kater liegt zusammengerollt.",
      "Kondoo trinken Wasser.",
      "Der Hund bellt freudig.",
      "Die Schlange schlängelt sich langsam."
    ],
    normal: [
      "In der afrikanischen Hiatili wanatandaza kwa utulivu chini ya kivuli cha miti.",
      "Simba, mfalme wa wanyama, anachukua udhibiti wa teritwari yake kwa ujasiri.",
      "Ndege hulala kwa amani kwenye matawi ya miti mikubwa ya msitu.",
      "Tembo wanashirikiana katika kutafuta maji katika milima ya Afrika.",
      "Ustadi wa twiga unaonekana katika jinsi anavyostahimili joto kali.",
      "Flamingo wanatulia na kuonekana vyema kwenye pwani.",
      "Kondoo wanapiga mfano wa utaratibu katika maeneo ya kijani.",
      "Mbwa mwitu wanaonyesha ustadi wa kukimbia msituni.",
      "Ndege wanapaa kwa urahisi na ufanisi angani.",
      "Kipepeo anaonyesha uzuri wa asili kupitia manyoya yake laini.",
      "Nyoka anasogeza polepole kwenye maeneo yenye mawe mengi.",
      "Chura anapiga magurudumu kwenye maji baridi ya bwawa.",
      "Kondoo wanakaa pamoja wakiongozwa na hisia za undugu.",
      "Kuku wanatafuta chakula kwa ustadi katika bustani.",
      "Mbwa analinda maeneo yao kwa umakini mkubwa.",
      "Tembo, wakiongozwa na hekima ya wazee, wanafanya miguu kwa umoja.",
      "Mawasiliano kati ya wanyama unaonyesha uzuri wa maadili ya asili.",
      "Panya wanakimbia ndani ya maeneo yenye changamoto.",
      "Ndege wanaonyesha uwezo wa kuruka juu ya milima ya kijani.",
      "Kondoo wanapenda kupumzika chini ya kivuli cha miti na kufurahia utulivu."
    ],
    hard: [
      "Katika hifadhi ya wanyama, muundo wa kijamii wa simba unaonyesha mlinganyo wa nguvu na umoja wa kundi.",
      "Mafanikio ya ndege katika kuruka kwa usawa yanaunda michoro ya ajabu angani.",
      "Katika msitu mnene, ujifunzaji wa jaguar unaonesha ustadi wa kujificha na kuwinda kwa siri.",
      "Uhamiaji wa ndege wa Arctic tern unaonyesha ustahimilivu wa viumbe wa angani.",
      "Katika miamba ya matumbawe, uwiano kati ya wanyama wanaowinda na wanaokimbia unaendesha ikosistema ya viumbe.",
      "Utazamaji wa peacock na mkusanyiko wa rangi za manyoya unaonyesha sanaa ya mabadiliko ya kiasili.",
      "Katika milima mikubwa, snow leopard inaonyesha mchanganyiko wa umakinifu na ustadi wa kujificha.",
      "Mawasiliano ya siri kati ya tembo, kupitia malumbano ya kina, yanadhihirisha akili ya kihisia.",
      "Kundi la orka linaonesha mbinu za kuwinda zilizo sahihi kwa ushirikiano mzuri.",
      "Katika kina cha bahari, viumbe vinavyoangaza kwa nuru ya kipekee huleta uzuri wa ajabu.",
      "Utamaduni wa kuoa wa baadhi ya ndege unaonyesha mwingiliano wa uteuzi wa kijeni na mazingira.",
      "Katika jangwa, mikakati ya wanyama wa usiku inaonyesha uvumilivu na ubunifu wa kiufundi.",
      "Uhamiaji wa wanyama wa pori unaonesha nguvu ya kujifunza kutokana na mazoezi ya maisha.",
      "Katika msitu wa kale, uhusiano wa viumbe mbalimbali unaumba mtandao dhaifu wa ikosistema.",
      "Mawasiliano ya pamoja ya kundi la samaki yanadhihirisha kiwango cha juu cha akili ya kikundi."
    ]
  },
  code_python: {
    easy: [
      "print('Hallo, Welt!')",
      "a = 5",
      "b = 10",
      "print(a + b)",
      "name = 'Alice'",
      "print('Hallo ' + name)",
      "x = 3.14",
      "print(x)",
      "liste = [1, 2, 3]",
      "print(liste)",
      "for i in range(3): print(i)",
      "if a < b: print('a ist kleiner als b')",
      "zahl = 42",
      "print('Die Zahl ist', zahl)",
      "text = 'Python'",
      "print(text.upper())",
      "bool_wert = True",
      "print(bool_wert)",
      "result = 7 * 8",
      "print(result)",
      "x = 2",
      "y = 3",
      "print(x ** y)",
      "name = 'Bob'",
      "print('Willkommen, ' + name)",
      "liste = ['Apfel', 'Banane', 'Kirsche']",
      "print(liste[1])",
      "a = 10",
      "b = 3",
      "print(a % b)"
    ],
    normal: [
      "function addiere(x, y) { return x + y; } console.log(addiere(4, 5));",
      "function quadrat(x) { return x * x; } console.log(quadrat(6));",
      "function begruessung(name) { return 'Hallo, ' + name; } console.log(begruessung('Eva'));",
      "for (let i = 0; i < 5; i++) { console.log(i); }",
      "let zahlen = [1, 2, 3, 4, 5]; console.log(zahlen.reduce((a, b) => a + b));",
      "function fakultaet(n) { return n === 0 ? 1 : n * fakultaet(n - 1); } console.log(fakultaet(5));",
      "let liste = [10, 20, 30]; liste.forEach(zahl => console.log(zahl));",
      "let x = 10, y = 2; console.log(x / y);",
      "function maxWert(a, b) { return a > b ? a : b; } console.log(maxWert(8, 12));",
      "let wort = 'python'; console.log(wort.charAt(0).toUpperCase() + wort.slice(1));",
      "function istGerade(n) { return n % 2 === 0; } console.log(istGerade(7));",
      "function umkehren(text) { return text.split('').reverse().join(''); } console.log(umkehren('Hallo'));",
      "for (let i = 2; i < 10; i += 2) { console.log(i); }",
      "let zahlen = [3, 6, 9]; console.log(zahlen.reduce((a, b) => a + b) / zahlen.length);",
      "function addiereListen(liste1, liste2) { return liste1.map((x, i) => x + liste2[i]); } console.log(addiereListen([1,2], [3,4]));",
      "let name = 'Clara'; console.log(`Willkommen, ${name}!`);",
      "function istPositiv(n) { return n > 0; } console.log(istPositiv(-5));",
      "for (let buchstabe of 'Python') { console.log(buchstabe); }",
      "function doppelt(n) { return n * 2; } console.log(doppelt(7));",
      "let liste = Array.from({length: 5}, (_, i) => i); console.log(liste);"
    ],
    hard: [
      "function fibonacci(n) { let a = 0, b = 1, sequence = []; while (sequence.length < n) { sequence.push(a); [a, b] = [b, a + b]; } return sequence; } console.log(fibonacci(10));",
      "try { let zahl = parseInt('abc'); } catch (e) { console.log('Ungültige Eingabe!'); }",
      "function istPrim(n) { if (n < 2) return false; for (let i = 2; i <= Math.sqrt(n); i++) { if (n % i === 0) return false; } return true; } console.log(istPrim(17));",
      "function sortiereListe(liste) { return liste.sort((a, b) => a - b); } console.log(sortiereListe([5, 2, 9, 1]));",
      "function quadratWurzel(n) { return Math.sqrt(n); } console.log(quadratWurzel(16));",
      "class Tier { constructor(name) { this.name = name; } sprich() { return 'Grrr'; } } let tiger = new Tier('Tiger'); console.log(tiger.sprich());",
      "function fakultaet(n) { let result = 1; for (let i = 1; i <= n; i++) { result *= i; } return result; } console.log(fakultaet(6));",
      "function mergeDicts(a, b) { return {...a, ...b}; } console.log(mergeDicts({x: 1}, {y: 2}));",
      "function zaehleVokale(text) { let count = 0; for (let char of text.toLowerCase()) { if ('aeiou'.includes(char)) count++; } return count; } console.log(zaehleVokale('Programmierung'));",
      "function matrixTransponieren(matrix) { return matrix[0].map((_, i) => matrix.map(row => row[i])); } console.log(matrixTransponieren([[1,2,3],[4,5,6]]));",
      "function istPalindrom(text) { text = text.replace(/\\s+/g, '').toLowerCase(); return text === text.split('').reverse().join(''); } console.log(istPalindrom('Reliefpfeiler'));",
      "function zaehleWorte(text) { return text.split(' ').length; } console.log(zaehleWorte('Das ist ein Beispieltext.'));",
      "function zufallszahl() { return Math.floor(Math.random() * 100) + 1; } console.log(zufallszahl());",
      "function erstelleDict(keys, values) { let result = {}; keys.forEach((k, i) => result[k] = values[i]); return result; } console.log(erstelleDict(['a', 'b'], [1, 2]));",
      "function findeMaximum(liste) { return Math.max(...liste); } console.log(findeMaximum([3, 7, 2, 9, 5]));"
    ]
  }
};

const sentenceLibraries_en = {
  standard: {
    easy: [
      "The cat sleeps quietly.",
      "The dog barks happily.",
      "The sun rises in the east.",
      "The bird sings at dawn.",
      "The child smiles brightly.",
      "The tree stands tall.",
      "The flower blooms in spring.",
      "The river flows calmly.",
      "The wind blows gently.",
      "The rain falls softly.",
      "The sky is clear today.",
      "The car moves slowly.",
      "The book is on the table.",
      "The clock ticks steadily.",
      "The lamp shines at night.",
      "The bus arrives on time.",
      "The apple tastes sweet.",
      "The coffee smells rich.",
      "The market is busy.",
      "The shop opens early.",
      "The park is full of life.",
      "The stars twinkle above.",
      "The moon glows softly.",
      "The fish swims in the pond.",
      "The ice melts in the sun.",
      "The baby laughs joyfully.",
      "The door opens slowly.",
      "The bell rings clearly.",
      "The grass is green.",
      "The mountain looms in the distance."
    ],
    normal: [
      "A gentle breeze carries the scent of blooming flowers on a warm spring day.",
      "The majestic sunset casts a golden glow over the calm lake.",
      "In a bustling café, friends share laughter over steaming cups of coffee.",
      "The architect designed the building with an emphasis on symmetry and light.",
      "A quiet library offers a sanctuary of knowledge and reflection.",
      "The artist captures the vibrant energy of the city in a colorful mural.",
      "The calm ocean waves provide a soothing backdrop to the coastal town.",
      "A group of children plays joyfully in the sunlit park.",
      "The historic castle stands as a testament to a bygone era of grandeur.",
      "A soft melody drifts through the open window, filling the room with tranquility.",
      "The gentle hum of conversation fills the air in the busy market.",
      "A small boat sails across the sparkling sea under a clear blue sky.",
      "The morning dew glistens on the fresh green grass.",
      "An old clock in the town square chimes every hour with a steady rhythm.",
      "The aroma of freshly baked bread fills the quaint village bakery.",
      "A serene garden offers a peaceful escape from the urban rush.",
      "The distant mountains provide a stunning backdrop to the lush valley.",
      "A soft rain nourishes the earth and refreshes the weary traveler.",
      "The concert hall reverberates with the rich tones of a grand piano.",
      "A winding path through the forest invites exploration and wonder."
    ],
    hard: [
      "Amidst a tempestuous storm, a solitary figure navigates the ruins of a forgotten city with unwavering determination.",
      "The interplay of light and shadow in the abandoned mansion evokes a haunting, ethereal beauty.",
      "In a realm where reality blurs with dreams, the subtle hues of twilight reveal profound existential truths.",
      "The architect's vision melds classical grandeur with modern minimalism, creating a space that transcends time.",
      "A reflective essay on the impermanence of life unfolds amidst the silent ruins of an ancient civilization.",
      "The intricate tapestry of urban chaos and natural serenity forms the backdrop of an unforgettable narrative.",
      "In the depths of a secluded forest, the interplay of nature's elements manifests in a symphony of muted colors.",
      "A lone poet articulates the complexities of human emotion through verses that echo the melancholy of twilight.",
      "The relentless rhythm of rain against aged cobblestones creates a haunting melody of solitude.",
      "In a forgotten corner of the metropolis, the convergence of art and decay sparks a dialogue of existential introspection.",
      "A stark exploration of the transient nature of beauty is depicted in the interplay of fading light and encroaching darkness.",
      "The enigmatic charm of a derelict warehouse offers a canvas for the raw expression of postmodern thought.",
      "An intricate narrative of loss and redemption unfolds against the backdrop of a crumbling urban landscape.",
      "The chiaroscuro of an overcast sky and bustling city streets conveys a profound commentary on modern existence.",
      "A solitary figure, enveloped by the somber glow of streetlights, contemplates the impermanence of dreams in a restless world."
    ]
  },
  animalworld: {
    easy: [
      "The dog barks in the garden.",
      "The cat chases a ball.",
      "The rabbit hops in the field.",
      "The bird soars in the sky.",
      "The fish swims in a bowl.",
      "The cow grazes in the meadow.",
      "The sheep bleats softly.",
      "The pig rolls in the mud.",
      "The duck waddles near the pond.",
      "The horse trots gracefully.",
      "The goat climbs the hillside.",
      "The parrot mimics its owner.",
      "The hamster runs in a wheel.",
      "The turtle crawls slowly.",
      "The frog leaps into the water.",
      "The bee buzzes around a flower.",
      "The ant marches in a line.",
      "The butterfly flutters by.",
      "The lizard basks on a rock.",
      "The ostrich runs quickly.",
      "The seal claps on the beach.",
      "The whale breaches in the ocean.",
      "The dolphin jumps over waves.",
      "The penguin waddles on ice.",
      "The eagle glides above the cliffs.",
      "The squirrel gathers nuts.",
      "The koala sleeps in a tree.",
      "The monkey swings on vines.",
      "The camel walks in the desert.",
      "The flamingo stands on one leg."
    ],
    normal: [
      "In the vast savannah, the graceful giraffe moves with a measured elegance.",
      "A herd of zebras gallops in unison across the open plains.",
      "The elephant, with its massive presence, communicates through deep, resonant sounds.",
      "In a serene forest, a bear ambles gently among the towering trees.",
      "The swift cheetah sprints after its prey with breathtaking speed.",
      "A pod of dolphins frolics in the sparkling blue ocean.",
      "The majestic lion roars as it surveys its territory.",
      "A family of otters plays joyfully by the riverside.",
      "The vibrant plumage of a parrot enlivens the tropical rainforest.",
      "A graceful swan glides effortlessly across the tranquil lake.",
      "The nimble monkey swings between branches with remarkable agility.",
      "In the cool depths of the ocean, a school of fish moves in harmonious patterns.",
      "The keen-eyed hawk soars high, scanning the land below.",
      "A curious raccoon explores the forest at dusk.",
      "The sturdy rhinoceros makes its way through dense vegetation.",
      "A pod of whales communicates through complex songs in the deep sea.",
      "The playful antics of young elephants fascinate onlookers.",
      "A swift falcon dives from the sky with precision.",
      "The intricate patterns on a butterfly's wings captivate the observer.",
      "In the heart of the jungle, a leopard moves silently through the undergrowth."
    ],
    hard: [
      "Across the sprawling African plains, the intricate social hierarchy of a lion pride reflects nature's complex balance of power and cooperation.",
      "The synchronized flight of a massive flock of starlings creates mesmerizing, ever-shifting patterns in the twilight sky.",
      "In the dense rainforest, the subtle interplay of camouflage and keen predatory instincts is exemplified by the stealth of the jaguar.",
      "The migratory journey of an arctic tern, spanning continents, is a testament to the endurance and navigational prowess of the avian world.",
      "Within the coral reefs, the delicate balance between predator and prey orchestrates an ecosystem of unparalleled biodiversity.",
      "The refined courtship display of a peacock, with its iridescent tail, is a captivating example of evolutionary artistry.",
      "In the rugged mountains, a solitary snow leopard epitomizes the blend of agility and stealth required for survival.",
      "The nuanced communication among elephants, conveyed through subtle gestures and low-frequency rumbles, illustrates a profound emotional intelligence.",
      "A pod of orcas exhibits sophisticated hunting techniques, coordinating their movements with precise timing.",
      "In the vast ocean depths, bioluminescent organisms create a surreal spectacle that blurs the lines between reality and fantasy.",
      "The complex mating rituals of certain bird species reveal an extraordinary interplay of genetic selection and environmental adaptation.",
      "Amidst the harsh desert landscape, the adaptive strategies of nocturnal animals showcase remarkable resilience and ingenuity.",
      "The dynamic migration patterns of wildebeests, driven by instinct and survival, create a breathtaking natural phenomenon.",
      "In an ancient forest, the interdependence of various species forms a delicate network of ecological balance.",
      "The coordinated movements of a school of fish, reacting in unison to threats, demonstrate an advanced level of collective behavior."
    ]
  }
};

const sentenceLibraries_sw = {
  standard: {
    easy: [
      "Jua linaangaza angani.",
      "Mbwa anakimbia kwa haraka.",
      "Paka analala kwa utulivu.",
      "Mtoto anacheka kwa furaha.",
      "Mti unakua shupavu.",
      "Maua yanachanua katika bustani.",
      "Maji yanayeruka mto.",
      "Upepo unapuliza kwa upole.",
      "Mvua inaanguka kwa upole.",
      "Anga ni safi leo.",
      "Gari linaenda polepole.",
      "Kitabu kipo mezani.",
      "Saa inatembea kwa utulivu.",
      "Taa inaangaza usiku.",
      "Basi linafika kwa wakati.",
      "Tofaa ina ladha tamu.",
      "Kahawa ina harufu nzuri.",
      "Soko ni lenye shughuli nyingi.",
      "Hifadhi ina wanyama wengi.",
      "Nyota zinatangaza juu.",
      "Mwezi unaangaza usiku.",
      "Samaki wanalia mtoni.",
      "Barafu inanyowesha jua.",
      "Mtoto anacheza nje.",
      "Mlango unafunguliwa polepole.",
      "Kengele inapiga wazi.",
      "Majani ni ya kijani.",
      "Mlima unaonekana mbali.",
      "Mto unapita kimya.",
      "Chai ni ya moto."
    ],
    normal: [
      "Maua yanavutia kwa harufu tamu na rangi angavu katika bustani.",
      "Kivuli cha mti kinatoa baridi katika jua kali la mchana.",
      "Mawimbi ya bahari yanacheza kwa utulivu kando ya pwani.",
      "Jioni, anga inabadilika rangi na kutoa mwanga laini.",
      "Watoto wanacheza pamoja katika uwanja wa michezo.",
      "Soko la mitaani linajaa watu na sauti za biashara.",
      "Mkusanyiko wa wapenzi wa sanaa unaandamana na muziki laini.",
      "Kutembea barabarani kunaleta amani katika akili.",
      "Mji mkongwe una historia ya tamaduni na mila za kale.",
      "Muziki wa kiasili unaendesha hisia za furaha na nostalgia.",
      "Majengo ya zamani yanahifadhi kumbukumbu za zamani.",
      "Usiku, mwanga wa mwezi huangaza njia kwa utulivu.",
      "Sanaa ya mchoro inaelezea hadithi za zamani kwa rangi nyingi.",
      "Sherehe za kitamaduni zinawavutia watu kutoka maeneo mbali.",
      "Kahawa yenye ladha tamu inatoa faraja kwa wateja.",
      "Makumbusho yanahifadhi sanaa na urithi wa miji.",
      "Hifadhi ya wanyama inalinda aina mbalimbali za viumbe.",
      "Shughuli za kijamii zinakuza umoja na ushirikiano.",
      "Mambo ya asili yanajumuisha mandhari ya kuvutia na urafiki.",
      "Mbali na mji, mashamba ya kijani yanatoa utulivu wa kipekee."
    ],
    hard: [
      "Katika uwanja mpana wa nyika ya Afrika, muundo wa kijamii wa wanyama unaonyesha umoja na ufanisi wa mawasiliano.",
      "Mchoro wa mwanga na kivuli kwenye anga hutoa picha ya uzuri wa hali ya juu na ugumu wa maisha.",
      "Katika msitu mnene, muingiliano wa maumbo ya asili unafichua hadithi za kihistoria na hisia za undani.",
      "Muziki wa upepo unaochanganya sauti za asili na ngoma za jadi unaingiza hisia za amani na majonzi.",
      "Mwangaza wa alfajiri unapotawanyika, anga inabadilisha rangi, ikitoa mwanga wa matumaini na uzuri.",
      "Katika mji wa kale, urithi wa kitamaduni unaunganishwa na asili ya nchi, ukileta mwangaza katika kila kona.",
      "Mchoro wa mwanga wa mwezi na kivuli cha miti kinaunda mandhari ya kusisimua na yenye uzito wa kihistoria.",
      "Katika uwanja wa sherehe, muonekano wa watu unaelezea hadithi za mapambano na mafanikio ya maisha.",
      "Mchanga wa ufukweni unaandika kumbukumbu za ajabu katika mwelekeo wa upepo wenye nguvu.",
      "Katika msitu wa ajabu, harufu ya mimea na sauti za wanyama zinaunda usawa wa asili.",
      "Katika anga yenye nyota nyingi, mwanga wa mwezi unafanya rangi kubadilika na kutoa hisia za maajabu.",
      "Muziki wa asili unaonyesha uhusiano wa karibu kati ya viumbe na mazingira yao.",
      "Katika mbuga ya wanyama, ufanisi wa mawasiliano unaonekana katika tabia ya wanyama wa pori.",
      "Mchoro wa angani na ardhi unaelezea historia ya dunia kwa njia ya rangi na mwanga.",
      "Katika msitu mnene, sauti za asili zinafichua siri za maisha na mzunguko wa uhai."
    ]
  },
  wanyama: {
    easy: [
      "Mbwa analia bustani.",
      "Paka anakimbia haraka.",
      "Sungura anaruka uwanjani.",
      "Ndege anapaa juu.",
      "Samaki wanacheza kwenye bwawa.",
      "Ng'ombe analisha malisho.",
      "Mbuzi anakula majani.",
      "Twiga anaonekana kwa uzuri.",
      "Paroti anarudia maneno.",
      "Hamster anakimbia kwenye gurudumu.",
      "Kobe inasonga taratibu.",
      "Chura anarukaruka kwenye bwawa.",
      "Nyuki anakusanya asali.",
      "Kipepeo anapaa kwa urahisi.",
      "Tembo anatembea kwa utulivu.",
      "Kuku anakula nafaka.",
      "Kondoo anacheza katika vijani.",
      "Kondoo analala kwa utulivu.",
      "Panya anakimbia ndani ya nyumba.",
      "Mbwa mwitu anakimbia msituni.",
      "Simba anakalia kwa nguvu.",
      "Flamingo anasimama kwa mguu mmoja.",
      "Kiboko anakaa kwenye maji.",
      "Faru anapumzika chini ya mti.",
      "Tembo anapiga kelele.",
      "Ndege anapaa kwa furaha.",
      "Paka analala karibu na jua.",
      "Kondoo wanakunywa maji.",
      "Mbwa analia kwa furaha.",
      "Nyoka anaposwa polepole."
    ],
    normal: [
      "Katika hifadhi, kondoo wanatandaza kwa utulivu chini ya kivuli cha miti.",
      "Simba, mfalme wa wanyama, anachukua udhibiti wa teritwari yake kwa ujasiri.",
      "Ndege hulala kwa amani kwenye matawi ya miti mikubwa ya msitu.",
      "Tembo wanashirikiana katika kutafuta maji katika milima ya Afrika.",
      "Ustadi wa twiga unaonyesha jinsi anavyostahimili joto kali.",
      "Flamingo wanabaki wakiwa na ustadi wa kutawala mazingira ya pwani.",
      "Kondoo wanapiga mfano wa utaratibu katika maeneo ya kijani.",
      "Mbwa mwitu wanaonyesha ustadi wa kukimbia na kusikia katika msitu.",
      "Ndege wanaonyesha ustadi wa kuruka kwa urahisi na ufanisi angani.",
      "Kipepeo anaonyesha uzuri wa asili kupitia manyoya yake angavu.",
      "Nyoka anasogeza polepole katika maeneo yenye mawe mengi.",
      "Chura anapiga magurudumu kwenye maji baridi ya bwawa.",
      "Kondoo wanakaa pamoja wakiongozwa na hisia za undugu.",
      "Kuku wanatafuta chakula kwa ustadi katika bustani.",
      "Mbwa analinda maeneo yao kwa umakini mkubwa.",
      "Tembo, wakiongozwa na hekima ya wazee wao, wanafanya miguu kwa umoja.",
      "Uwezo wa wanyama katika hifadhi unaonyesha uzuri na umoja wa asili.",
      "Panya wanakimbia ndani ya maeneo yenye changamoto.",
      "Ndege wanaonyesha uwezo wa kuruka juu ya milima ya kijani.",
      "Kondoo wanapenda kupumzika chini ya kivuli cha miti, wakifurahia utulivu wa mazingira."
    ],
    hard: [
      "Katika uwanja mpana wa hifadhi ya wanyama, muundo wa kijamii wa simba unaonyesha mlinganyo wa nguvu na umoja wa kundi.",
      "Mchoro wa kuruka kwa ndege, ukiwa na usawa wa rangi na mwangaza, unaelezea furaha ya uhai wa asili.",
      "Kipenzi cha twiga kinachocheza katika upepo kinawakilisha ustadi wa kupambana na changamoto za mazingira.",
      "Katika msitu mnene, mawasiliano ya siri kati ya nyani na wanyama wengine unaonyesha kiwango cha juu cha akili ya kikabila.",
      "Mlinganyo wa utaratibu na mabadiliko ya hali ya hewa unaathiri sana miundo ya kijamii ya kondoo katika maeneo ya mlima.",
      "Ubunifu wa manyoya ya ndege unaonyesha mabadiliko ya kisanaa yanayotokana na uvumilivu wa mazingira.",
      "Katika mazingira ya pori, mzunguko wa chakula unaelezea uhusiano wa kina kati ya wanyama wanaowinda na wanaokimbia.",
      "Mchoro wa nyoka zinazopindukia ardhini unaweka wazi utaalamu wa kiasili katika mbinu za kujikinga na wapinzani.",
      "Utata wa mawasiliano kati ya kondoo unaonyesha ugumu wa uhusiano na uaminifu katika jamii ya wanyama.",
      "Mafumbo ya manyoya ya ndege wanaoelea kwa umakini kwenye anga ya ajabu unaonyesha ubunifu wa asili.",
      "Mkutano wa wanyama pori unaonyesha jinsi viumbe mbalimbali vinavyofanya kazi kwa pamoja ili kuhakikisha usalama wa makundi yao.",
      "Tabia ya kukimbia kwa wanyama wa pori inaonyesha uwezo wa mazoezi ya kikabila na miongozo ya kiasili.",
      "Mchoro wa ndoto za wanyama unaochanganya nguvu na upole unaonyesha uzuri wa maisha ya pori.",
      "Mwangaza wa alfajiri unaofunua rangi za asili kwenye manyoya ya ndege unaongeza uhusiano wa kijamii kati yao.",
      "Mlinganyo wa umakini na mwepesi unaonyesha jinsi wanyama wa pori wanavyojifunza kutokana na uzoefu wa maisha yao magumu."
    ]
  }
};

    console.log("Neue deutsche, englische und kiswahili Satzbibliotheken wurden erstellt.");

    let boss = null, bossDefeated = false;
    let lastProcessedIndex = 0;
    let lastHotStreakWordCount = 0;
    
    function calculateSessionScore(words, errorCount, wpm, sessionDuration) {
      let baseScore = words * 10;
      let errorPenalty = errorCount * 5;
      let targetWPM = 40;
      let tempoBonus = (wpm > targetWPM) ? Math.round((wpm - targetWPM) * 2) : 0;
      let timeBonus = sessionDuration < 120 ? 20 : 0;
      let finalScore = baseScore + tempoBonus + timeBonus - errorPenalty;
      return finalScore > 0 ? finalScore : 0;
    }
    
    function getPlayerRank() {
      if (userStats.xp < 500) return "Bronze";
      if (userStats.xp < 1000) return "Silber";
      return "Gold";
    }
    
    function updateProfileUI() {
      const profileImgElem = document.getElementById("profileImage");
      const playerNameElem = document.getElementById("playerName");
      const playerWissenspunkteElem = document.getElementById("playerWissenspunkte");
      profileImgElem.src = userStats.profileImage || "https://via.placeholder.com/80";
      playerNameElem.innerHTML = `${userStats.playerName} <span class="rank-badge">${getPlayerRank()}</span>`;
      playerWissenspunkteElem.textContent = "Wissenspunkte: " + userStats.wissenspunkte;
    }
    
    function showSessionResults(words, wpm, apm, errorCount, sessionScore) {
      let rank = getPlayerRank();
      let bonusWissenspunkte = Math.round(sessionScore / 10);
      let resultHTML = `
        <h2>${currentLanguage === 'de' ? "Session beendet!" : (currentLanguage === 'en' ? "Session Ended!" : "Muda Umekwisha!")}</h2>
        <p>${currentLanguage === 'de' ? "Spieler:" : (currentLanguage === 'en' ? "Player:" : "Mchezaji:")} ${userStats.playerName} – ${currentLanguage === 'de' ? "Rang:" : (currentLanguage === 'en' ? "Rank:" : "Cheo:")} ${rank}</p>
        <p>${currentLanguage === 'de' ? "Wörter:" : (currentLanguage === 'en' ? "Words:" : "Maneno:")} ${words}</p>
        <p>${currentLanguage === 'de' ? "WPM:" : (currentLanguage === 'en' ? "WPM:" : "Maneno kwa Dakika:")} ${wpm}</p>
        <p>${currentLanguage === 'de' ? "APM:" : (currentLanguage === 'en' ? "APM:" : "Mabofya kwa Dakika:")} ${apm}</p>
        <p>${currentLanguage === 'de' ? "Fehler:" : (currentLanguage === 'en' ? "Errors:" : "Makosa:")} ${errorCount}</p>
        <p>${currentLanguage === 'de' ? "Session Score:" : (currentLanguage === 'en' ? "Session Score:" : "Alama za Muda:")} ${sessionScore}</p>
        <p>${currentLanguage === 'de' ? "Bonus Wissenspunkte:" : (currentLanguage === 'en' ? "Bonus Knowledge Points:" : "Alama za Ziada: ")} ${bonusWissenspunkte}</p>
        <button onclick="closeResultsPopup()">${currentLanguage === 'de' ? "Schließen" : (currentLanguage === 'en' ? "Close" : "Funga")}</button>
      `;
      endSessionPopup.innerHTML = resultHTML;
      endSessionPopup.style.display = "block";
    }
    
    function closeResultsPopup() {
      endSessionPopup.style.display = "none";
    }
    
    function rollBonus() {
      return Math.floor(Math.random() * (50 - 3 + 1)) + 3;
    }
    
    function checkHotStreakBonus() {
      const HOT_STREAK_THRESHOLD = 8;
      if (hotStreakCounter >= HOT_STREAK_THRESHOLD) {
        let bonus = rollBonus();
        showDicePopup(bonus);
        hotStreakCounter = 0;
        return bonus;
      }
      return 0;
    }
    
    function showDicePopup(bonus) {
      const dicePopup = document.createElement("div");
      dicePopup.innerHTML = `<div class="dice-animation">${bonus}</div>`;
      dicePopup.style.position = "fixed";
      dicePopup.style.top = "50%";
      dicePopup.style.left = "50%";
      dicePopup.style.transform = "translate(-50%, -50%)";
      dicePopup.style.background = "rgba(0,0,0,0.8)";
      dicePopup.style.color = "#fff";
      dicePopup.style.padding = "20px";
      dicePopup.style.borderRadius = "10px";
      dicePopup.style.fontSize = "2em";
      dicePopup.style.zIndex = "500";
      document.body.appendChild(dicePopup);
      setTimeout(() => {
        dicePopup.classList.add("fade-out");
        setTimeout(() => { document.body.removeChild(dicePopup); }, 1000);
      }, 2000);
    }
    
    function renderShop() {
      const shopProfileSection = document.getElementById("shopProfileSection");
      shopProfileSection.innerHTML = "<h3>Profilbilder</h3>";
      shopProfileItems.forEach(item => {
        const btn = document.createElement("button");
        btn.id = "shop_" + item.id;
        if (userStats.inventory.profileImages && userStats.inventory.profileImages.includes(item.imgUrl)) {
          btn.disabled = true;
          btn.innerHTML = `<img src="${item.imgUrl}" style="width:32px; vertical-align:middle;"> Gekauft`;
        } else {
          btn.innerHTML = `<img src="${item.imgUrl}" style="width:32px; vertical-align:middle;"> ${item.price} Wissenspunkte`;
          btn.onclick = () => purchaseItem(item, "profile");
        }
        shopProfileSection.appendChild(btn);
      });
      const shopGluecksbringerSection = document.getElementById("shopGluecksbringerSection");
      shopGluecksbringerSection.innerHTML = "<h3>Glücksbringer</h3>";
      shopGluecksbringerItems.forEach(item => {
        const btn = document.createElement("button");
        btn.id = "shop_" + item.id;
        if (userStats.inventory.gluecksbringer && userStats.inventory.gluecksbringer.includes(item.imgUrl)) {
          btn.disabled = true;
          btn.innerHTML = `<img src="${item.imgUrl}" style="width:32px; vertical-align:middle;"> Gekauft`;
        } else {
          btn.innerHTML = `<img src="${item.imgUrl}" style="width:32px; vertical-align:middle;"> ${item.price} Wissenspunkte`;
          btn.onclick = () => purchaseItem(item, "gluecksbringer");
        }
        shopGluecksbringerSection.appendChild(btn);
      });
    }
    
    function purchaseItem(item, type) {
      if (userStats.wissenspunkte >= item.price) {
        userStats.wissenspunkte -= item.price;
        if (type === "profile") {
          userStats.profileImage = item.imgUrl;
          userStats.inventory.profileImages = userStats.inventory.profileImages || [];
          if (!userStats.inventory.profileImages.includes(item.imgUrl)) {
            userStats.inventory.profileImages.push(item.imgUrl);
          }
          unlockReward(`Profilbild ${item.id} freigeschaltet!`);
        } else if (type === "gluecksbringer") {
          document.getElementById("writeArea").style.cursor = "url('" + item.imgUrl + "'), auto";
          userStats.inventory.gluecksbringer = userStats.inventory.gluecksbringer || [];
          if (!userStats.inventory.gluecksbringer.includes(item.imgUrl)) {
            userStats.inventory.gluecksbringer.push(item.imgUrl);
          }
          unlockReward(`Glücksbringer ${item.id} freigeschaltet!`);
        }
        updateProfileUI();
        renderInventory();
        renderShop();
        alert(`${item.id} wurde erfolgreich gekauft!`);
      } else {
        alert(currentLanguage === 'de' ? "Nicht genügend Wissenspunkte! Verdiene mehr XP und Wissenspunkte, indem du weiterschreibst." : (currentLanguage === 'en' ? "Not enough Knowledge Points! Earn more XP and points by writing." : "Hatutoshi alama za maarifa! Pata XP zaidi kwa kuandika."));
      }
    }
    
    function renderInventory() {
      const container = document.getElementById("inventoryContainer");
      container.innerHTML = "<h2>Inventar</h2>";
      let profileDiv = document.createElement("div");
      profileDiv.innerHTML = "<h3>Profilbilder</h3>";
      userStats.inventory.profileImages = userStats.inventory.profileImages || [];
      userStats.inventory.profileImages.forEach(imgUrl => {
        let img = document.createElement("img");
        img.src = imgUrl;
        img.style.width = "50px";
        img.style.marginRight = "5px";
        img.style.cursor = "pointer";
        img.title = "Klicke, um dieses Profilbild auszuwählen";
        img.onclick = () => {
          userStats.profileImage = imgUrl;
          updateProfileUI();
          renderInventory();
        };
        profileDiv.appendChild(img);
      });
      container.appendChild(profileDiv);
      let gluecksbringerDiv = document.createElement("div");
      gluecksbringerDiv.innerHTML = "<h3>Glücksbringer</h3>";
      userStats.inventory.gluecksbringer = userStats.inventory.gluecksbringer || [];
      userStats.inventory.gluecksbringer.forEach(curUrl => {
        let img = document.createElement("img");
        img.src = curUrl;
        img.style.width = "50px";
        img.style.marginRight = "5px";
        img.style.cursor = "pointer";
        img.title = "Klicke, um diesen Glücksbringer auszuwählen";
        img.onclick = () => {
          document.getElementById("writeArea").style.cursor = "url('" + curUrl + "'), auto";
        };
        gluecksbringerDiv.appendChild(img);
      });
      container.appendChild(gluecksbringerDiv);
    }
    
    function generateProfileChecksum(stats) {
      return generateHash(stats.wissenspunkte.toString() + JSON.stringify(stats.inventory.gluecksbringer) + secretKey);
    }

    function saveProfile() {
      const profileChecksum = generateHash(userStats.wissenspunkte.toString() + secretKey);
      userStats.profileChecksum = generateProfileChecksum(userStats);
      const data = JSON.stringify(userStats, null, 2);
      const blob = new Blob([data], { type: "application/json" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "profile.json";
      document.body.appendChild(a);
      a.click();
      setTimeout(() => {
        URL.revokeObjectURL(url);
        a.remove();
      }, 100);
    }

    function loadProfile(event) {
      const file = event.target.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = function(e) {
        try {
          const loadedProfile = JSON.parse(e.target.result);
          const expectedChecksum = generateProfileChecksum(loadedProfile);
          if (loadedProfile.profileChecksum !== expectedChecksum) {
            alert("Profilprüfung fehlgeschlagen! Möglicher Betrugsversuch!");
            return;
          }
          userStats = loadedProfile;
          updateXPAndLevelDisplay();
          updateProfileUI();
          renderInventory();
          renderShop();
          alert("Profil erfolgreich geladen.");
        } catch (error) {
          alert("Fehler beim Laden des Profils: " + error);
        }
      };
      reader.readAsText(file);
    }

    function updateXPAndLevelDisplay() {
      xpDisplay.textContent = `XP: ${userStats.xp}`;
      levelDisplay.textContent = `Level: ${userStats.level}`;
    }

    function checkLevelUp() {
      const newLevel = Math.floor(userStats.xp / 100) + 1;
      if (newLevel > userStats.level) {
        userStats.level = newLevel;
        alert(currentLanguage === 'de' ? `Level Up! Du bist jetzt Level ${newLevel}.` : (currentLanguage === 'en' ? `Level Up! You are now level ${newLevel}.` : `Kiwango kimepanda! Umefikia kiwango cha ${newLevel}.`));
        userStats.wissenspunkte += 50;
        if (newLevel === 2) { unlockReward("😀 Emoji Profil"); }
        if (newLevel === 3) { unlockReward("😎 Cool Emoji"); }
        if (newLevel === 4) { unlockReward("🔥 Hot Emoji"); }
        if (newLevel === 5) { unlockReward("🏆 Champion Emoji"); }
      }
      updateXPAndLevelDisplay();
      updateProfileUI();
    }

    function saveSessionToLeaderboard() {
      const currentWords = countWords(writeArea.innerText);
      const sessionData = { words: currentWords, xp: userStats.xp, timestamp: Date.now() };
      leaderboard.push(sessionData);
      leaderboard.sort((a, b) => b.words - a.words);
      localStorage.setItem("leaderboard", JSON.stringify(leaderboard));
    }

    function updateLeaderboard() {
      const leaderboardBody = document.getElementById("leaderboardBody");
      leaderboardBody.innerHTML = "";
      leaderboard.slice(0, 10).forEach((session, index) => {
        const row = document.createElement("tr");
        row.innerHTML = `<td>${index + 1} ⭐</td><td>${session.words} ✍️</td><td>${session.xp} 🏆</td>`;
        leaderboardBody.appendChild(row);
      });
    }

    function shareResults() {
      const summary = `${currentLanguage === 'de' ? "Schreibabenteuer DemusOpalium Ergebnisse:" : (currentLanguage === 'en' ? "Writing Adventure DemusOpalium Results:" : "Matokeo ya Mchezo wa Kuandika DemusOpalium:")}\n${currentLanguage === 'de' ? "Wörter:" : (currentLanguage === 'en' ? "Words:" : "Maneno:")} ${countWords(writeArea.innerText)}\n${currentLanguage === 'de' ? "XP:" : (currentLanguage === 'en' ? "XP:" : "XP:")} ${userStats.xp}\n${currentLanguage === 'de' ? "Level:" : (currentLanguage === 'en' ? "Level:" : "Kiwango:")} ${userStats.level}`;
      navigator.clipboard.writeText(summary).then(() => { 
        alert(currentLanguage === 'de' ? "Ergebnisse kopiert!" : (currentLanguage === 'en' ? "Results copied!" : "Matokeo yamekunakili!")); 
      });
    }

    function unlockReward(reward) {
      if (!unlockedRewards.includes(reward)) {
        unlockedRewards.push(reward);
        alert(currentLanguage === 'de' ? "Reward freigeschaltet: " + reward : (currentLanguage === 'en' ? "Reward unlocked: " + reward : "Tuzo limetolewa: " + reward));
        localStorage.setItem("unlockedRewards", JSON.stringify(unlockedRewards));
        updateRewardUI();
      }
    }

    function updateRewardUI() {
      const rewardList = document.getElementById("rewardList");
      rewardList.innerHTML = "";
      unlockedRewards.forEach(r => {
        const li = document.createElement("li");
        li.textContent = r;
        rewardList.appendChild(li);
      });
    }

    /* --- Event Listener --- */
    document.getElementById("changeNameBtn").addEventListener("click", function() {
      const newName = document.getElementById("playerNameInput").value.trim();
      if (newName) {
        userStats.playerName = newName;
        updateProfileUI();
        alert(currentLanguage === 'de' ? "Name wurde geändert!" : (currentLanguage === 'en' ? "Name changed!" : "Jina limetabadilishwa!"));
      } else {
        alert(currentLanguage === 'de' ? "Bitte gib einen gültigen Namen ein." : (currentLanguage === 'en' ? "Please enter a valid name." : "Tafadhali ingiza jina halali."));
      }
    });

    document.getElementById("saveProfileBtn").addEventListener("click", saveProfile);
    document.getElementById("loadProfileBtn").addEventListener("click", () => { loadProfileInput.click(); });
    document.getElementById("loadProfileInput").addEventListener("change", loadProfile);

    document.getElementById("infoBtn").addEventListener("click", () => { document.getElementById("infoModal").style.display = "flex"; });
    document.getElementById("closeInfo").addEventListener("click", () => { document.getElementById("infoModal").style.display = "none"; });
    window.addEventListener("click", (event) => { 
      const infoModal = document.getElementById("infoModal");
      if (event.target === infoModal) { infoModal.style.display = "none"; }
    });
    document.getElementById("startBtn").addEventListener("click", () => { resetSession(); });
    document.getElementById("resetBtn").addEventListener("click", resetSession);
    document.getElementById("promptBtn").addEventListener("click", showRandomPrompt);
    document.getElementById("shareBtn").addEventListener("click", shareResults);
    document.getElementById("checkBtn").addEventListener("click", checkCopySentence);

    const modeSelect = document.getElementById("modeSelect");
    const timeSelect = document.getElementById("timeSelect");
    const difficultySelect = document.getElementById("difficultySelect");
    const writeArea = document.getElementById("writeArea");
    const timerDisplay = document.getElementById("timer");
    const wordCountDisplay = document.getElementById("wordCount");
    const goalProgressDisplay = document.getElementById("goalProgress");
    const xpDisplay = document.getElementById("xpDisplay");
    const levelDisplay = document.getElementById("levelDisplay");
    const wpmDisplay = document.getElementById("wpmDisplay");
    const apmDisplay = document.getElementById("apmDisplay");
    const hotStreakIndicator = document.getElementById("hotStreakIndicator");
    const achievementPopup = document.getElementById("achievementPopup");
    const copyTargetElem = document.getElementById("copyTarget");
    const targetSentenceElem = document.getElementById("targetSentence");
    const endSessionPopup = document.getElementById("endSessionPopup");
    let leaderboard = JSON.parse(localStorage.getItem("leaderboard")) || [];
    let unlockedRewards = [];
    if (localStorage.getItem("unlockedRewards")) {
      unlockedRewards = JSON.parse(localStorage.getItem("unlockedRewards"));
      updateRewardUI();
    }
    let sessionAchievements = {};
    let copyAchieved = {};
    const prompts = [
      "Es war einmal ein geheimnisvoller Wald, in dem die Zeit stillzustehen schien...",
      "Als die Sonne hinter den Bergen verschwand, begann ein Abenteuer, das alles verändern sollte...",
      "Plötzlich ertönte ein seltsames Geräusch, und niemand wusste, was als Nächstes passieren würde...",
      "In einer Stadt, in der jeder Bewohner ein Geheimnis hatte, wurde ein unscheinbarer Brief gefunden..."
    ];
    const warningSound = new Audio('warning.mp3');
    
    function countWords(text) {
      return text.trim().split(/\s+/).filter(w => w.length > 0).length;
    }
    
    function updateTimerDisplay() {
      let min = Math.floor(remainingTime / 60);
      let sec = remainingTime % 60;
      timerDisplay.textContent = `Time: ${min}:${sec.toString().padStart(2, "0")}`;
    }
    
    function updateWordCount() {
      const text = writeArea.innerText;
      const count = countWords(text);
      wordCountDisplay.textContent = `Words: ${count}`;
      goalProgressDisplay.textContent = `Goal: ${count}/${window.baseTarget || "-"}`;
      if (modeSelect.value === "adventure" && boss) { updateBossStatus(); }
      if (modeSelect.value === "adventure" && boss) {
         if (count - lastHotStreakWordCount >= 8) {
             let bonus = rollBonus();
             boss.currentHealth = Math.max(boss.currentHealth - bonus, 0);
             updateBossUI();
             showDicePopup(bonus);
             lastHotStreakWordCount = count;
         }
      }
      for (let threshold in sessionAchievements) {
        if (count >= threshold && !sessionAchievements[threshold].achieved) {
          sessionAchievements[threshold].achieved = true;
          const achieveElem = document.getElementById("achieve" + threshold);
          if (achieveElem) { achieveElem.textContent = "Erreicht"; }
        }
      }
    }
    
    function updateWPM() {
      if (!sessionStartTime) return;
      const elapsedMinutes = (Date.now() - sessionStartTime) / 60000;
      const wpm = Math.round(countWords(writeArea.innerText) / elapsedMinutes);
      wpmDisplay.textContent = `WPM: ${wpm}`;
    }
    
    function updateAPM() {
      if (!sessionStartTime) return;
      const elapsedMinutes = (Date.now() - sessionStartTime) / 60000;
      const apm = elapsedMinutes > 0 ? Math.round(keyPressCount / elapsedMinutes) : 0;
      apmDisplay.textContent = `APM: ${apm} max`;
    }
    
    function resetIdleTimer() {
      clearTimeout(idleTimeout);
      let idleLimit = (difficultySelect.value === "easy") ? 3000 : (difficultySelect.value === "normal") ? 2000 : 1000;
      idleTimeout = setTimeout(triggerInactivityWarning, idleLimit);
      writeArea.classList.remove("warning");
    }
    
    function triggerInactivityWarning() {
      writeArea.classList.add("warning");
      playWarningSound();
      if (modeSelect.value === "hardcore") {
        setTimeout(() => {
          if (writeArea.classList.contains("warning")) {
            writeArea.innerText = "";
            updateWordCount();
          }
        }, 2000);
      }
    }
    
    function playWarningSound() {
      warningSound.play().catch(e => console.log("Sound konnte nicht abgespielt werden:", e));
    }
    
    function showRandomPrompt() {
      const randomPrompt = prompts[Math.floor(Math.random() * prompts.length)];
      writeArea.innerText = randomPrompt + "\n\n";
      updateWordCount();
    }
    
    function showAchievement(message) {
      achievementPopup.textContent = message;
      achievementPopup.style.display = "block";
      achievementPopup.classList.add("animate__bounceIn");
      setTimeout(() => {
        achievementPopup.classList.remove("animate__bounceIn");
        achievementPopup.style.display = "none";
      }, 3000);
    }
    
    function showHotStreakIndicator() {
      hotStreakIndicator.style.display = "block";
      hotStreakIndicator.classList.add("animate__flash");
      setTimeout(() => {
        hotStreakIndicator.classList.remove("animate__flash");
        hotStreakIndicator.style.display = "none";
      }, 2000);
      hotStreakCounter = 0;
    }
    
    /* --- Copy Challenge Funktionen --- */
    function generateCopySentence() {
      let lib = document.getElementById("librarySelect").value;
      let diff = difficultySelect.value;
      let sentences;
      if (currentLanguage === 'en' && lib === 'tierwelt') {
        lib = 'animalworld';
      }
      if (currentLanguage === 'sw' && lib === 'tierwelt') {
        lib = 'wanyama';
      }
      if (currentLanguage === 'de') {
        sentences = sentenceLibraries[lib][diff];
      } else if (currentLanguage === 'en') {
        sentences = sentenceLibraries_en[lib] ? sentenceLibraries_en[lib][diff] : sentenceLibraries[lib][diff];
      } else if (currentLanguage === 'sw') {
        sentences = sentenceLibraries_sw[lib] ? sentenceLibraries_sw[lib][diff] : sentenceLibraries[lib][diff];
      }
      let randomIndex = Math.floor(Math.random() * sentences.length);
      currentTargetSentence = sentences[randomIndex];
      targetSentenceElem.textContent = currentTargetSentence.trim();
      writeArea.innerText = "";
    }
    
    function checkCopySentence() {
      let userInput = writeArea.innerText.replace(/\n/g, " ").trim().toLowerCase();
      let target = currentTargetSentence.trim().toLowerCase();
      if (userInput === target) {
        let points = currentTargetSentence.split(" ").length * 10;
        copyScore += points;
        userStats.xp += points;
        userStats.wissenspunkte += points;
        showAchievement(currentLanguage === 'de' ? "Satz korrekt! +" + points + " Punkte." : (currentLanguage === 'en' ? "Sentence correct! +" + points + " points." : "Sentensi sahihi! +" + points + " pointi."));
        checkCopyAchievements();
        writeArea.innerText = "";
        updateCopyScoreDisplay();
        generateCopySentence();
      } else {
        showAchievement(currentLanguage === 'de' ? "Nicht exakt! Versuche es erneut." : (currentLanguage === 'en' ? "Not exactly! Try again." : "Sio sahihi! Jaribu tena."));
      }
    }
    
    function checkCopyAchievements() {
      if (copyScore >= 100 && !copyAchieved["100"]) {
         copyAchieved["100"] = true;
         showAchievement(currentLanguage === 'de' ? "Copy Challenge Bronze erreicht! (+100 Punkte)" : (currentLanguage === 'en' ? "Copy Challenge Bronze reached! (+100 points)" : "Copy Challenge Bronze imefikia! (+100 pointi)"));
         unlockReward("🥉 Copy-Challenge Bronze");
      }
      if (copyScore >= 200 && !copyAchieved["200"]) {
         copyAchieved["200"] = true;
         showAchievement(currentLanguage === 'de' ? "Copy Challenge Silber erreicht! (+200 Punkte)" : (currentLanguage === 'en' ? "Copy Challenge Silver reached! (+200 points)" : "Copy Challenge Silver imefikia! (+200 pointi)"));
         unlockReward("🥈 Copy-Challenge Silber");
      }
      if (copyScore >= 300 && !copyAchieved["300"]) {
         copyAchieved["300"] = true;
         showAchievement(currentLanguage === 'de' ? "Copy Challenge Gold erreicht! (+300 Punkte)" : (currentLanguage === 'en' ? "Copy Challenge Gold reached! (+300 points)" : "Copy Challenge Gold imefikia! (+300 pointi)"));
         unlockReward("🥇 Copy-Challenge Gold");
      }
    }
    
    function initCopyMode() {
      copyScore = 0;
      copyAchieved = {};
      generateCopySentence();
      copyTargetElem.style.display = "block";
      document.getElementById("checkBtn").style.display = "inline-block";
      document.getElementById("copyScoreDisplay").style.display = "block";
      writeArea.innerText = currentLanguage === 'de' ? "Drücke Enter, um das Spiel zu starten" : (currentLanguage === 'en' ? "Press Enter to start the game" : "Bonyeza Enter kuanza mchezo");
      waitingForStart = true;
      updateCopyScoreDisplay();
    }
    
    function updateCopyScoreDisplay() {
      document.getElementById("copyScoreDisplay").textContent = "Copy Score: " + copyScore;
    }
    
    /* --- Neue Funktion: Schreibimpuls-Popup im Kreativ-Modus --- */
    function showPromptPopup() {
      const writeAreaRect = writeArea.getBoundingClientRect();
      const promptPopup = document.createElement("div");
      promptPopup.style.position = "absolute";
      promptPopup.style.top = (window.scrollY + writeAreaRect.top - 50) + "px";
      promptPopup.style.left = (window.scrollX + writeAreaRect.left) + "px";
      promptPopup.style.width = writeAreaRect.width + "px";
      promptPopup.style.background = "rgba(0,0,0,0.8)";
      promptPopup.style.color = "#fff";
      promptPopup.style.padding = "10px";
      promptPopup.style.borderRadius = "5px";
      promptPopup.style.textAlign = "center";
      promptPopup.style.zIndex = "400";
      promptPopup.textContent = prompts[Math.floor(Math.random() * prompts.length)];
      document.body.appendChild(promptPopup);
      setTimeout(() => { promptPopup.remove(); }, 10000);
    }
    
    function startSession() {
      endSessionPopup.style.display = "none";
      sessionActive = true;
      keyPressCount = 0;
      hotStreakCounter = 0;
      waitingForStart = false;
      let idleLimit = (difficultySelect.value === "easy") ? 3000 : (difficultySelect.value === "normal") ? 2000 : 1000;
      let thresholdTime = (difficultySelect.value === "easy") ? 250 : (difficultySelect.value === "normal") ? 200 : 150;
      hotStreakTimeThreshold = thresholdTime;
      idleTimeout = setTimeout(triggerInactivityWarning, idleLimit);
    
      const timeMode = parseInt(timeSelect.value);
      remainingTime = timeMode * 60;
      if (modeSelect.value !== "copy") {
        window.baseTarget = (difficultySelect.value === "easy") ? timeMode * 65 : (difficultySelect.value === "normal") ? timeMode * 85 : timeMode * 100;
        generateAchievements();
      } else {
        generateCopySentence();
      }
    
      if (modeSelect.value === "adventure") {
        initBoss();
        lastProcessedIndex = 0;
        lastHotStreakWordCount = countWords(writeArea.innerText);
      }
      
      if (modeSelect.value === "creative") { showPromptPopup(); }
    
      updateTimerDisplay();
      updateWordCount();
      sessionStartTime = Date.now();
    
      timerInterval = setInterval(() => {
        remainingTime--;
        updateTimerDisplay();
        updateWPM();
        updateAPM();
        if (modeSelect.value === "adventure" && boss) { updateBossStatus(); }
        if (remainingTime <= 0) { 
          if (modeSelect.value !== "copy") {
            let words = countWords(writeArea.innerText);
            let wpm = Math.round(words / ((Date.now() - sessionStartTime) / 60000));
            let apm = Math.round(keyPressCount / ((Date.now() - sessionStartTime) / 60000));
            let errorCount = 0;
            let sessionDuration = Math.floor((Date.now() - sessionStartTime) / 1000);
            let sessionScore = calculateSessionScore(words, errorCount, wpm, sessionDuration);
            userStats.wissenspunkte += Math.round(sessionScore / 10);
            updateXPAndLevelDisplay();
            saveSessionToLeaderboard();
            updateLeaderboard();
            updateProfileUI();
            showSessionResults(words, wpm, apm, errorCount, sessionScore);
          }
          endSession();
        }
      }, 1000);
    }
    
    function resetSession() {
      clearInterval(timerInterval);
      clearTimeout(idleTimeout);
      sessionActive = false;
      remainingTime = parseInt(timeSelect.value) * 60;
      writeArea.innerText = currentLanguage === 'de' ? "Drücke Enter, um das Spiel zu starten" : (currentLanguage === 'en' ? "Press Enter to start the game" : "Bonyeza Enter kuanza mchezo");
      waitingForStart = true;
      updateTimerDisplay();
      updateWordCount();
      writeArea.classList.remove("warning");
      keyPressCount = 0;
      boss = null;
      bossDefeated = false;
      document.getElementById("bossContainer").style.display = "none";
      hotStreakIndicator.style.display = "none";
      copyTargetElem.style.display = "none";
      document.getElementById("checkBtn").style.display = "none";
      document.getElementById("copyScoreDisplay").style.display = "none";
      endSessionPopup.style.display = "none";
      
      if (modeSelect.value === "copy") {
        initCopyMode();
      }
    }
    
    function endSession() {
      clearInterval(timerInterval);
      clearTimeout(idleTimeout);
      sessionActive = false;
      
      if (modeSelect.value !== "copy") {
      } else {
        let message = currentLanguage === 'de' ? "Deine Copy Challenge Punkte: " + copyScore : (currentLanguage === 'en' ? "Your Copy Challenge score: " + copyScore : "Alama zako za Copy Challenge: " + copyScore);
        endSessionPopup.innerHTML = `<h2>${currentLanguage === 'de' ? "Session beendet!" : (currentLanguage === 'en' ? "Session Ended!" : "Muda umekwisha!")}</h2>
                                     <p>${message}</p>
                                     <button onclick="closeResultsPopup()">${currentLanguage === 'de' ? "Schließen" : (currentLanguage === 'en' ? "Close" : "Funga")}</button>`;
        endSessionPopup.style.display = "block";
      }
      
      const currentWords = countWords(writeArea.innerText);
      for (let threshold in sessionAchievements) {
        if (currentWords >= threshold && !sessionAchievements[threshold].achieved) {
          sessionAchievements[threshold].achieved = true;
          const achieveElem = document.getElementById("achieve" + threshold);
          if (achieveElem) { achieveElem.textContent = "Erreicht"; }
        }
      }
      const sessionDuration = Math.floor((Date.now() - sessionStartTime) / 1000);
      const xpEarned = currentWords + Math.floor(sessionDuration / 10);
      userStats.xp += xpEarned;
      userStats.totalWords += currentWords;
      if (sessionDuration > userStats.longestSession) { userStats.longestSession = sessionDuration; }
      checkLevelUp();
      saveSessionToLeaderboard();
      updateLeaderboard();
      copyTargetElem.style.display = "none";
      document.getElementById("checkBtn").style.display = "none";
      document.getElementById("copyScoreDisplay").style.display = "none";
      updateProfileUI();
    }
    
    function initBoss() {
      boss = { name: "Wort Boss", maxHealth: 500, currentHealth: 500, targetWords: window.baseTarget * 1.5 };
      bossDefeated = false;
      document.getElementById("bossContainer").style.display = "block";
      document.getElementById("bossName").textContent = boss.name;
      updateBossUI();
    }
    
    function updateBossUI() {
      let healthPercent = (boss.currentHealth / boss.maxHealth) * 100;
      document.getElementById("bossHealth").style.width = healthPercent + "%";
    }
    
    function processNewTextForBossDamage() {
      let fullText = writeArea.innerText;
      let newText = fullText.substring(lastProcessedIndex);
      if (newText.trim().length === 0) return 0;
      let damage = 0;
      let sentenceRegex = /[^\.!\?]+[\.!\?]+/g;
      let sentences = newText.match(sentenceRegex);
      if (!sentences) { sentences = [newText]; }
      sentences.forEach(sentence => {
        let sentenceDamage = 0;
        let words = sentence.trim().split(/\s+/);
        words.forEach(word => {
          let cleanedWord = word.replace(/^[^A-Za-zÄÖÜäöüß'-]+|[^A-Za-zÄÖÜäöüß'-]+$/g, '');
          if (cleanedWord.length > 0) { sentenceDamage += cleanedWord.length; }
        });
        damage += sentenceDamage + Math.round(sentenceDamage * 0.2);
      });
      damage += checkHotStreakBonus();
      lastProcessedIndex = fullText.length;
      return damage;
    }
    
    function updateBossStatus() {
      let newDamage = processNewTextForBossDamage();
      if (newDamage > 0) { boss.currentHealth = Math.max(boss.currentHealth - newDamage, 0); }
      updateBossUI();
      if (boss.currentHealth <= 0 && !bossDefeated) { bossDefeated = true; winGame(); }
    }
    
    function winGame() {
      let bonusXP = 50;
      let bonusWissenspunkte = 50;
      showAchievement(currentLanguage === 'de' ? "Boss besiegt! Bonus XP und Wissenspunkte erhalten!" : (currentLanguage === 'en' ? "Boss defeated! Bonus XP and points awarded!" : "Boss imefanywa! Pokea bonus XP na alama!"));
      userStats.xp += bonusXP;
      userStats.wissenspunkte += bonusWissenspunkte;
      unlockReward("🏆 Boss-Besieger Emoji");
      clearInterval(timerInterval);
      clearTimeout(idleTimeout);
      endSessionPopup.innerHTML = `<h2>${currentLanguage === 'de' ? "Gewonnen! Boss besiegt!" : (currentLanguage === 'en' ? "You Won! Boss Defeated!" : "Umeshinda! Boss imeshindwa!")}</h2>
                                   <p>${currentLanguage === 'de' ? "Bonus XP:" : (currentLanguage === 'en' ? "Bonus XP:" : "Bonus XP:")} ${bonusXP}</p>
                                   <p>${currentLanguage === 'de' ? "Bonus Wissenspunkte:" : (currentLanguage === 'en' ? "Bonus Points:" : "Bonus Alama:")} ${bonusWissenspunkte}</p>
                                   <button onclick="closeResultsPopup()">${currentLanguage === 'de' ? "Schließen" : (currentLanguage === 'en' ? "Close" : "Funga")}</button>`;
      endSessionPopup.style.display = "block";
      updateProfileUI();
    }
    
    function generateAchievements() {
      sessionAchievements = {};
      let threshold = 25;
      while (threshold <= window.baseTarget) {
        sessionAchievements[threshold] = { achieved: false, category: (threshold < 100 ? "Freewrite" : threshold < 200 ? "Copy" : "Allgemein") };
        threshold += 25;
      }
      updateAchievementsTable();
    }
    
    function updateAchievementsTable() {
      const tbody = document.getElementById("achievementBody");
      tbody.innerHTML = "";
      const tier = (difficultySelect.value === "easy") ? "Bronze" : (difficultySelect.value === "normal") ? "Silber" : "Gold";
      const timeMode = parseInt(timeSelect.value);
      const timeLabel = (timeMode === 1) ? "Minute" : "Minuten";
      for (let threshold in sessionAchievements) {
        const ach = sessionAchievements[threshold];
        const row = document.createElement("tr");
        row.setAttribute("data-category", ach.category);
        row.innerHTML = `<td>${timeMode} ${timeLabel}: ${tier} ${threshold}+ Wörter</td>
                         <td>Mindestens ${threshold} Wörter in ${timeMode} ${timeLabel}</td>
                         <td id="achieve${threshold}">${ach.achieved ? "Erreicht" : "Nicht erreicht"}</td>`;
        tbody.appendChild(row);
      }
    }
    
    writeArea.addEventListener("keydown", (e) => {
      if (!sessionActive && waitingForStart && e.key === "Enter") {
         e.preventDefault();
         waitingForStart = false;
         writeArea.innerText = "";
         startSession();
         return;
      }
      if (!sessionActive) return;
      if (modeSelect.value === "copy" && e.key === "Enter") {
         e.preventDefault();
         checkCopySentence();
         return;
      }
      resetIdleTimer();
      updateWordCount();
      keyPressCount++;
      const currentTime = Date.now();
      if (currentTime - lastKeyTime < hotStreakTimeThreshold) { hotStreakCounter++; }
      else { hotStreakCounter = 1; }
      lastKeyTime = currentTime;
      if (hotStreakCounter >= hotStreakRequired) { showHotStreakIndicator(); }
    });
    
    document.getElementById("themeSelect").addEventListener("change", function() {
      document.body.className = "";
      document.body.classList.add(this.value);
    });
    
    document.getElementById("fontSelect").addEventListener("change", function() {
      document.body.style.fontFamily = this.value;
    });
    
    renderShop();
    renderInventory();
    updateLeaderboard();
    updateProfileUI();
  </script>
</body>
</html>
